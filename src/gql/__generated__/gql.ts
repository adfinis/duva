/* eslint-disable */
import * as types from './graphql';
import type { TypedDocumentNode as DocumentNode } from '@graphql-typed-document-node/core';

/**
 * Map of all GraphQL operations in the project.
 *
 * This map has several performance disadvantages:
 * 1. It is not tree-shakeable, so it will include all operations in the project.
 * 2. It is not minifiable, so the string of a GraphQL query will be multiple times inside the bundle.
 * 3. It does not support dead code elimination, so it will add unused operations.
 *
 * Therefore it is highly recommended to use the babel or swc plugin for production.
 * Learn more about it here: https://the-guild.dev/graphql/codegen/plugins/presets/preset-client#reducing-bundle-size
 */
type Documents = {
    "query GetAllDocuments($filter: [DocumentFilterSetType], $order: [DocumentOrderSetType], $first: Int, $after: String) {\n  allDocuments(filter: $filter, order: $order, first: $first, after: $after) {\n    edges {\n      node {\n        id\n        createdAt\n        modifiedAt\n        createdByUser\n        createdByGroup\n        meta\n        form {\n          id\n          slug\n          name\n        }\n      }\n    }\n  }\n}\n\nquery GetDocument($id: ID!) {\n  allDocuments(filter: [{id: $id}]) {\n    edges {\n      node {\n        id\n        createdAt\n        modifiedAt\n        createdByUser\n        createdByGroup\n        meta\n        form {\n          id\n          slug\n          name\n          questions {\n            edges {\n              node {\n                id\n                slug\n                label\n              }\n            }\n          }\n        }\n        answers {\n          edges {\n            node {\n              id\n              meta\n              question {\n                id\n                slug\n              }\n              ... on StringAnswer {\n                stringValue: value\n              }\n              ... on IntegerAnswer {\n                integerValue: value\n              }\n              ... on FloatAnswer {\n                floatValue: value\n              }\n              ... on ListAnswer {\n                listValue: value\n              }\n              ... on DateAnswer {\n                dateValue: value\n              }\n              ... on FilesAnswer {\n                filesValue: value {\n                  id\n                  name\n                  downloadUrl\n                  uploadUrl\n                  metadata\n                }\n              }\n              ... on TableAnswer {\n                tableValue: value {\n                  id\n                  form {\n                    id\n                    slug\n                  }\n                  answers {\n                    edges {\n                      node {\n                        id\n                        question {\n                          id\n                          slug\n                        }\n                        ... on StringAnswer {\n                          stringValue: value\n                        }\n                        ... on IntegerAnswer {\n                          integerValue: value\n                        }\n                        ... on FloatAnswer {\n                          floatValue: value\n                        }\n                        ... on ListAnswer {\n                          listValue: value\n                        }\n                        ... on DateAnswer {\n                          dateValue: value\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}\n\nmutation SaveDocument($input: SaveDocumentInput!) {\n  saveDocument(input: $input) {\n    document {\n      id\n      createdAt\n      modifiedAt\n      meta\n      form {\n        id\n        slug\n        name\n      }\n    }\n    clientMutationId\n  }\n}\n\nmutation CopyDocument($input: CopyDocumentInput!) {\n  copyDocument(input: $input) {\n    document {\n      id\n      createdAt\n      modifiedAt\n      meta\n      form {\n        id\n        slug\n        name\n      }\n    }\n    clientMutationId\n  }\n}\n\nmutation RemoveDocument($input: RemoveDocumentInput!) {\n  removeDocument(input: $input) {\n    clientMutationId\n  }\n}\n\nmutation SaveDocumentStringAnswer($input: SaveDocumentStringAnswerInput!) {\n  saveDocumentStringAnswer(input: $input) {\n    answer {\n      id\n      meta\n      question {\n        id\n        slug\n      }\n      ... on StringAnswer {\n        value\n      }\n    }\n    clientMutationId\n  }\n}\n\nmutation SaveDocumentIntegerAnswer($input: SaveDocumentIntegerAnswerInput!) {\n  saveDocumentIntegerAnswer(input: $input) {\n    answer {\n      id\n      meta\n      question {\n        id\n        slug\n      }\n      ... on IntegerAnswer {\n        value\n      }\n    }\n    clientMutationId\n  }\n}\n\nmutation SaveDocumentFloatAnswer($input: SaveDocumentFloatAnswerInput!) {\n  saveDocumentFloatAnswer(input: $input) {\n    answer {\n      id\n      meta\n      question {\n        id\n        slug\n      }\n      ... on FloatAnswer {\n        value\n      }\n    }\n    clientMutationId\n  }\n}\n\nmutation SaveDocumentDateAnswer($input: SaveDocumentDateAnswerInput!) {\n  saveDocumentDateAnswer(input: $input) {\n    answer {\n      id\n      meta\n      question {\n        id\n        slug\n      }\n      ... on DateAnswer {\n        value\n      }\n    }\n    clientMutationId\n  }\n}\n\nmutation SaveDocumentListAnswer($input: SaveDocumentListAnswerInput!) {\n  saveDocumentListAnswer(input: $input) {\n    answer {\n      id\n      meta\n      question {\n        id\n        slug\n      }\n      ... on ListAnswer {\n        value\n      }\n    }\n    clientMutationId\n  }\n}\n\nmutation SaveDocumentTableAnswer($input: SaveDocumentTableAnswerInput!) {\n  saveDocumentTableAnswer(input: $input) {\n    answer {\n      id\n      meta\n      question {\n        id\n        slug\n      }\n      ... on TableAnswer {\n        value {\n          id\n          form {\n            id\n            slug\n          }\n        }\n      }\n    }\n    clientMutationId\n  }\n}\n\nmutation SaveDocumentFilesAnswer($input: SaveDocumentFilesAnswerInput!) {\n  saveDocumentFilesAnswer(input: $input) {\n    answer {\n      id\n      meta\n      question {\n        id\n        slug\n      }\n      ... on FilesAnswer {\n        value {\n          id\n          name\n          downloadUrl\n          uploadUrl\n          metadata\n        }\n      }\n    }\n    clientMutationId\n  }\n}\n\nmutation RemoveAnswer($input: RemoveAnswerInput!) {\n  removeAnswer(input: $input) {\n    answer {\n      id\n    }\n    clientMutationId\n  }\n}\n\nmutation SaveDefaultStringAnswer($input: SaveDefaultStringAnswerInput!) {\n  saveDefaultStringAnswer(input: $input) {\n    answer {\n      id\n      ... on StringAnswer {\n        value\n      }\n    }\n    clientMutationId\n  }\n}\n\nmutation SaveDefaultIntegerAnswer($input: SaveDefaultIntegerAnswerInput!) {\n  saveDefaultIntegerAnswer(input: $input) {\n    answer {\n      id\n      ... on IntegerAnswer {\n        value\n      }\n    }\n    clientMutationId\n  }\n}\n\nmutation SaveDefaultFloatAnswer($input: SaveDefaultFloatAnswerInput!) {\n  saveDefaultFloatAnswer(input: $input) {\n    answer {\n      id\n      ... on FloatAnswer {\n        value\n      }\n    }\n    clientMutationId\n  }\n}\n\nmutation SaveDefaultDateAnswer($input: SaveDefaultDateAnswerInput!) {\n  saveDefaultDateAnswer(input: $input) {\n    answer {\n      id\n      ... on DateAnswer {\n        value\n      }\n    }\n    clientMutationId\n  }\n}\n\nmutation SaveDefaultListAnswer($input: SaveDefaultListAnswerInput!) {\n  saveDefaultListAnswer(input: $input) {\n    answer {\n      id\n      ... on ListAnswer {\n        value\n      }\n    }\n    clientMutationId\n  }\n}\n\nmutation SaveDefaultTableAnswer($input: SaveDefaultTableAnswerInput!) {\n  saveDefaultTableAnswer(input: $input) {\n    answer {\n      id\n      ... on TableAnswer {\n        value {\n          id\n        }\n      }\n    }\n    clientMutationId\n  }\n}\n\nmutation RemoveDefaultAnswer($input: RemoveDefaultAnswerInput!) {\n  removeDefaultAnswer(input: $input) {\n    question {\n      id\n      slug\n    }\n    clientMutationId\n  }\n}": typeof types.GetAllDocumentsDocument,
    "query GetForm($slug: String!) {\n  allForms(filter: [{slugs: [$slug]}]) {\n    edges {\n      node {\n        id\n        name\n        slug\n        description\n        isPublished\n        isArchived\n        meta\n        createdByUser\n        createdByGroup\n      }\n    }\n  }\n}\n\nquery GetAllForms($filter: [FormFilterSetType], $order: [FormOrderSetType], $first: Int, $after: String, $offset: Int) {\n  allForms(\n    filter: $filter\n    order: $order\n    first: $first\n    after: $after\n    offset: $offset\n  ) {\n    pageInfo {\n      hasNextPage\n      endCursor\n    }\n    totalCount\n    edges {\n      node {\n        id\n        slug\n        name\n        description\n        isPublished\n        isArchived\n        meta\n        createdByUser\n        createdByGroup\n      }\n    }\n  }\n}\n\nquery CheckFormSlug($slug: String!) {\n  allForms(filter: [{slugs: [$slug]}]) {\n    edges {\n      node {\n        id\n        slug\n      }\n    }\n  }\n}\n\nmutation SaveForm($input: SaveFormInput!) {\n  saveForm(input: $input) {\n    form {\n      id\n      slug\n      name\n      description\n      isPublished\n      isArchived\n      meta\n      createdByUser\n      createdByGroup\n    }\n    clientMutationId\n  }\n}\n\nmutation CopyForm($input: CopyFormInput!) {\n  copyForm(input: $input) {\n    form {\n      id\n      slug\n      name\n      description\n      isPublished\n      isArchived\n      meta\n    }\n    clientMutationId\n  }\n}\n\nmutation AddFormQuestion($input: AddFormQuestionInput!) {\n  addFormQuestion(input: $input) {\n    form {\n      id\n      slug\n      name\n    }\n    clientMutationId\n  }\n}\n\nmutation RemoveFormQuestion($input: RemoveFormQuestionInput!) {\n  removeFormQuestion(input: $input) {\n    form {\n      id\n      slug\n      name\n    }\n    clientMutationId\n  }\n}\n\nmutation ReorderFormQuestions($input: ReorderFormQuestionsInput!) {\n  reorderFormQuestions(input: $input) {\n    form {\n      id\n      slug\n      name\n    }\n    clientMutationId\n  }\n}": typeof types.GetFormDocument,
    "query CheckOptionSlug($slug: String!) {\n  allQuestions {\n    edges {\n      node {\n        ... on ChoiceQuestion {\n          options(filter: [{slug: $slug}]) {\n            edges {\n              node {\n                id\n                slug\n              }\n            }\n          }\n        }\n        ... on MultipleChoiceQuestion {\n          options(filter: [{slug: $slug}]) {\n            edges {\n              node {\n                id\n                slug\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}\n\nmutation SaveOption($input: SaveOptionInput!) {\n  saveOption(input: $input) {\n    option {\n      id\n      slug\n      label\n      isHidden\n      meta\n    }\n    clientMutationId\n  }\n}\n\nmutation CopyOption($input: CopyOptionInput!) {\n  copyOption(input: $input) {\n    option {\n      id\n      slug\n      label\n      isHidden\n      meta\n    }\n    clientMutationId\n  }\n}": typeof types.CheckOptionSlugDocument,
    "query GetAllQuestions($filter: [QuestionFilterSetType], $order: [QuestionOrderSetType], $first: Int, $after: String) {\n  allQuestions(filter: $filter, order: $order, first: $first, after: $after) {\n    edges {\n      node {\n        id\n        slug\n        label\n        isRequired\n        isHidden\n        isArchived\n        meta\n        infoText\n      }\n    }\n  }\n}\n\nquery SearchQuestions($search: String!) {\n  allQuestions(filter: [{search: $search}]) {\n    edges {\n      node {\n        id\n        slug\n        label\n        isArchived\n      }\n    }\n  }\n}\n\nquery CheckQuestionSlug($slug: String!) {\n  allQuestions(filter: [{slugs: [$slug]}]) {\n    edges {\n      node {\n        id\n        slug\n      }\n    }\n  }\n}\n\nmutation SaveTextQuestion($input: SaveTextQuestionInput!) {\n  saveTextQuestion(input: $input) {\n    question {\n      id\n      slug\n      label\n      isRequired\n      isHidden\n      isArchived\n      meta\n      infoText\n      ... on TextQuestion {\n        minLength\n        maxLength\n        placeholder\n        hintText\n      }\n    }\n    clientMutationId\n  }\n}\n\nmutation SaveTextareaQuestion($input: SaveTextareaQuestionInput!) {\n  saveTextareaQuestion(input: $input) {\n    question {\n      id\n      slug\n      label\n      isRequired\n      isHidden\n      isArchived\n      meta\n      infoText\n      ... on TextareaQuestion {\n        minLength\n        maxLength\n        placeholder\n        hintText\n      }\n    }\n    clientMutationId\n  }\n}\n\nmutation SaveIntegerQuestion($input: SaveIntegerQuestionInput!) {\n  saveIntegerQuestion(input: $input) {\n    question {\n      id\n      slug\n      label\n      isRequired\n      isHidden\n      isArchived\n      meta\n      infoText\n      ... on IntegerQuestion {\n        minValue\n        maxValue\n        placeholder\n        hintText\n      }\n    }\n    clientMutationId\n  }\n}\n\nmutation SaveFloatQuestion($input: SaveFloatQuestionInput!) {\n  saveFloatQuestion(input: $input) {\n    question {\n      id\n      slug\n      label\n      isRequired\n      isHidden\n      isArchived\n      meta\n      infoText\n      ... on FloatQuestion {\n        minValue\n        maxValue\n        placeholder\n        hintText\n      }\n    }\n    clientMutationId\n  }\n}\n\nmutation SaveDateQuestion($input: SaveDateQuestionInput!) {\n  saveDateQuestion(input: $input) {\n    question {\n      id\n      slug\n      label\n      isRequired\n      isHidden\n      isArchived\n      meta\n      infoText\n      ... on DateQuestion {\n        hintText\n      }\n    }\n    clientMutationId\n  }\n}\n\nmutation SaveChoiceQuestion($input: SaveChoiceQuestionInput!) {\n  saveChoiceQuestion(input: $input) {\n    question {\n      id\n      slug\n      label\n      isRequired\n      isHidden\n      isArchived\n      meta\n      infoText\n      ... on ChoiceQuestion {\n        hintText\n        options {\n          edges {\n            node {\n              id\n              slug\n              label\n              isHidden\n            }\n          }\n        }\n      }\n    }\n    clientMutationId\n  }\n}\n\nmutation SaveMultipleChoiceQuestion($input: SaveMultipleChoiceQuestionInput!) {\n  saveMultipleChoiceQuestion(input: $input) {\n    question {\n      id\n      slug\n      label\n      isRequired\n      isHidden\n      isArchived\n      meta\n      infoText\n      ... on MultipleChoiceQuestion {\n        hintText\n        options {\n          edges {\n            node {\n              id\n              slug\n              label\n              isHidden\n            }\n          }\n        }\n      }\n    }\n    clientMutationId\n  }\n}\n\nmutation SaveDynamicChoiceQuestion($input: SaveDynamicChoiceQuestionInput!) {\n  saveDynamicChoiceQuestion(input: $input) {\n    question {\n      id\n      slug\n      label\n      isRequired\n      isHidden\n      isArchived\n      meta\n      infoText\n      ... on DynamicChoiceQuestion {\n        hintText\n        dataSource\n      }\n    }\n    clientMutationId\n  }\n}\n\nmutation SaveDynamicMultipleChoiceQuestion($input: SaveDynamicMultipleChoiceQuestionInput!) {\n  saveDynamicMultipleChoiceQuestion(input: $input) {\n    question {\n      id\n      slug\n      label\n      isRequired\n      isHidden\n      isArchived\n      meta\n      infoText\n      ... on DynamicMultipleChoiceQuestion {\n        hintText\n        dataSource\n      }\n    }\n    clientMutationId\n  }\n}\n\nmutation SaveTableQuestion($input: SaveTableQuestionInput!) {\n  saveTableQuestion(input: $input) {\n    question {\n      id\n      slug\n      label\n      isRequired\n      isHidden\n      isArchived\n      meta\n      infoText\n      ... on TableQuestion {\n        hintText\n      }\n    }\n    clientMutationId\n  }\n}\n\nmutation SaveFormQuestion($input: SaveFormQuestionInput!) {\n  saveFormQuestion(input: $input) {\n    question {\n      id\n      slug\n      label\n      isRequired\n      isHidden\n      isArchived\n      meta\n      infoText\n      ... on FormQuestion {\n        subForm {\n          id\n          slug\n          name\n        }\n      }\n    }\n    clientMutationId\n  }\n}\n\nmutation SaveFilesQuestion($input: SaveFilesQuestionInput!) {\n  saveFilesQuestion(input: $input) {\n    question {\n      id\n      slug\n      label\n      isRequired\n      isHidden\n      isArchived\n      meta\n      infoText\n      ... on FilesQuestion {\n        hintText\n      }\n    }\n    clientMutationId\n  }\n}\n\nmutation SaveStaticQuestion($input: SaveStaticQuestionInput!) {\n  saveStaticQuestion(input: $input) {\n    question {\n      id\n      slug\n      label\n      isRequired\n      isHidden\n      isArchived\n      meta\n      infoText\n      ... on StaticQuestion {\n        staticContent\n      }\n    }\n    clientMutationId\n  }\n}\n\nmutation SaveCalculatedFloatQuestion($input: SaveCalculatedFloatQuestionInput!) {\n  saveCalculatedFloatQuestion(input: $input) {\n    question {\n      id\n      slug\n      label\n      isRequired\n      isHidden\n      isArchived\n      meta\n      infoText\n      ... on CalculatedFloatQuestion {\n        calcExpression\n        hintText\n      }\n    }\n    clientMutationId\n  }\n}\n\nmutation SaveActionButtonQuestion($input: SaveActionButtonQuestionInput!) {\n  saveActionButtonQuestion(input: $input) {\n    question {\n      id\n      slug\n      label\n      isRequired\n      isHidden\n      isArchived\n      meta\n      infoText\n      ... on ActionButtonQuestion {\n        action\n        color\n        validateOnEnter\n        showValidation\n      }\n    }\n    clientMutationId\n  }\n}\n\nmutation CopyQuestion($input: CopyQuestionInput!) {\n  copyQuestion(input: $input) {\n    question {\n      id\n      slug\n      label\n    }\n    clientMutationId\n  }\n}": typeof types.GetAllQuestionsDocument,
    "query GetAllFormatValidators {\n  allFormatValidators {\n    edges {\n      node {\n        slug\n        name\n        regex\n        allowedQuestionTypes\n      }\n    }\n  }\n}\n\nquery GetAllDataSources {\n  __type(name: \"DataSource\") {\n    enumValues {\n      name\n      description\n    }\n  }\n}\n\nquery CheckDocumentValidity($id: ID!, $dataSourceContext: JSONString) {\n  documentValidity(id: $id, dataSourceContext: $dataSourceContext) {\n    edges {\n      node {\n        id\n        isValid\n        errors {\n          slug\n          errorMsg\n        }\n      }\n    }\n  }\n}": typeof types.GetAllFormatValidatorsDocument,
    "query GetAllWorkItems($filter: [WorkItemFilterSetType], $order: [WorkItemOrderSetType], $first: Int, $after: String) {\n  allWorkItems(filter: $filter, order: $order, first: $first, after: $after) {\n    edges {\n      node {\n        id\n        status\n        createdAt\n        closedAt\n        meta\n        addressedGroups\n        assignedUsers\n        case {\n          id\n          document {\n            id\n            form {\n              id\n              slug\n              name\n            }\n          }\n        }\n        task {\n          id\n          slug\n          name\n        }\n      }\n    }\n  }\n}\n\nquery GetWorkItemStatus($id: ID!) {\n  allWorkItems(filter: [{id: $id}]) {\n    edges {\n      node {\n        id\n        status\n        meta\n      }\n    }\n  }\n}\n\nmutation CompleteWorkItem($input: CompleteWorkItemInput!) {\n  completeWorkItem(input: $input) {\n    workItem {\n      id\n      status\n      closedAt\n    }\n    clientMutationId\n  }\n}\n\nmutation CancelWorkItem($input: CancelWorkItemInput!) {\n  cancelWorkItem(input: $input) {\n    workItem {\n      id\n      status\n      closedAt\n    }\n    clientMutationId\n  }\n}\n\nmutation SkipWorkItem($input: SkipWorkItemInput!) {\n  skipWorkItem(input: $input) {\n    workItem {\n      id\n      status\n      closedAt\n    }\n    clientMutationId\n  }\n}": typeof types.GetAllWorkItemsDocument,
};
const documents: Documents = {
    "query GetAllDocuments($filter: [DocumentFilterSetType], $order: [DocumentOrderSetType], $first: Int, $after: String) {\n  allDocuments(filter: $filter, order: $order, first: $first, after: $after) {\n    edges {\n      node {\n        id\n        createdAt\n        modifiedAt\n        createdByUser\n        createdByGroup\n        meta\n        form {\n          id\n          slug\n          name\n        }\n      }\n    }\n  }\n}\n\nquery GetDocument($id: ID!) {\n  allDocuments(filter: [{id: $id}]) {\n    edges {\n      node {\n        id\n        createdAt\n        modifiedAt\n        createdByUser\n        createdByGroup\n        meta\n        form {\n          id\n          slug\n          name\n          questions {\n            edges {\n              node {\n                id\n                slug\n                label\n              }\n            }\n          }\n        }\n        answers {\n          edges {\n            node {\n              id\n              meta\n              question {\n                id\n                slug\n              }\n              ... on StringAnswer {\n                stringValue: value\n              }\n              ... on IntegerAnswer {\n                integerValue: value\n              }\n              ... on FloatAnswer {\n                floatValue: value\n              }\n              ... on ListAnswer {\n                listValue: value\n              }\n              ... on DateAnswer {\n                dateValue: value\n              }\n              ... on FilesAnswer {\n                filesValue: value {\n                  id\n                  name\n                  downloadUrl\n                  uploadUrl\n                  metadata\n                }\n              }\n              ... on TableAnswer {\n                tableValue: value {\n                  id\n                  form {\n                    id\n                    slug\n                  }\n                  answers {\n                    edges {\n                      node {\n                        id\n                        question {\n                          id\n                          slug\n                        }\n                        ... on StringAnswer {\n                          stringValue: value\n                        }\n                        ... on IntegerAnswer {\n                          integerValue: value\n                        }\n                        ... on FloatAnswer {\n                          floatValue: value\n                        }\n                        ... on ListAnswer {\n                          listValue: value\n                        }\n                        ... on DateAnswer {\n                          dateValue: value\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}\n\nmutation SaveDocument($input: SaveDocumentInput!) {\n  saveDocument(input: $input) {\n    document {\n      id\n      createdAt\n      modifiedAt\n      meta\n      form {\n        id\n        slug\n        name\n      }\n    }\n    clientMutationId\n  }\n}\n\nmutation CopyDocument($input: CopyDocumentInput!) {\n  copyDocument(input: $input) {\n    document {\n      id\n      createdAt\n      modifiedAt\n      meta\n      form {\n        id\n        slug\n        name\n      }\n    }\n    clientMutationId\n  }\n}\n\nmutation RemoveDocument($input: RemoveDocumentInput!) {\n  removeDocument(input: $input) {\n    clientMutationId\n  }\n}\n\nmutation SaveDocumentStringAnswer($input: SaveDocumentStringAnswerInput!) {\n  saveDocumentStringAnswer(input: $input) {\n    answer {\n      id\n      meta\n      question {\n        id\n        slug\n      }\n      ... on StringAnswer {\n        value\n      }\n    }\n    clientMutationId\n  }\n}\n\nmutation SaveDocumentIntegerAnswer($input: SaveDocumentIntegerAnswerInput!) {\n  saveDocumentIntegerAnswer(input: $input) {\n    answer {\n      id\n      meta\n      question {\n        id\n        slug\n      }\n      ... on IntegerAnswer {\n        value\n      }\n    }\n    clientMutationId\n  }\n}\n\nmutation SaveDocumentFloatAnswer($input: SaveDocumentFloatAnswerInput!) {\n  saveDocumentFloatAnswer(input: $input) {\n    answer {\n      id\n      meta\n      question {\n        id\n        slug\n      }\n      ... on FloatAnswer {\n        value\n      }\n    }\n    clientMutationId\n  }\n}\n\nmutation SaveDocumentDateAnswer($input: SaveDocumentDateAnswerInput!) {\n  saveDocumentDateAnswer(input: $input) {\n    answer {\n      id\n      meta\n      question {\n        id\n        slug\n      }\n      ... on DateAnswer {\n        value\n      }\n    }\n    clientMutationId\n  }\n}\n\nmutation SaveDocumentListAnswer($input: SaveDocumentListAnswerInput!) {\n  saveDocumentListAnswer(input: $input) {\n    answer {\n      id\n      meta\n      question {\n        id\n        slug\n      }\n      ... on ListAnswer {\n        value\n      }\n    }\n    clientMutationId\n  }\n}\n\nmutation SaveDocumentTableAnswer($input: SaveDocumentTableAnswerInput!) {\n  saveDocumentTableAnswer(input: $input) {\n    answer {\n      id\n      meta\n      question {\n        id\n        slug\n      }\n      ... on TableAnswer {\n        value {\n          id\n          form {\n            id\n            slug\n          }\n        }\n      }\n    }\n    clientMutationId\n  }\n}\n\nmutation SaveDocumentFilesAnswer($input: SaveDocumentFilesAnswerInput!) {\n  saveDocumentFilesAnswer(input: $input) {\n    answer {\n      id\n      meta\n      question {\n        id\n        slug\n      }\n      ... on FilesAnswer {\n        value {\n          id\n          name\n          downloadUrl\n          uploadUrl\n          metadata\n        }\n      }\n    }\n    clientMutationId\n  }\n}\n\nmutation RemoveAnswer($input: RemoveAnswerInput!) {\n  removeAnswer(input: $input) {\n    answer {\n      id\n    }\n    clientMutationId\n  }\n}\n\nmutation SaveDefaultStringAnswer($input: SaveDefaultStringAnswerInput!) {\n  saveDefaultStringAnswer(input: $input) {\n    answer {\n      id\n      ... on StringAnswer {\n        value\n      }\n    }\n    clientMutationId\n  }\n}\n\nmutation SaveDefaultIntegerAnswer($input: SaveDefaultIntegerAnswerInput!) {\n  saveDefaultIntegerAnswer(input: $input) {\n    answer {\n      id\n      ... on IntegerAnswer {\n        value\n      }\n    }\n    clientMutationId\n  }\n}\n\nmutation SaveDefaultFloatAnswer($input: SaveDefaultFloatAnswerInput!) {\n  saveDefaultFloatAnswer(input: $input) {\n    answer {\n      id\n      ... on FloatAnswer {\n        value\n      }\n    }\n    clientMutationId\n  }\n}\n\nmutation SaveDefaultDateAnswer($input: SaveDefaultDateAnswerInput!) {\n  saveDefaultDateAnswer(input: $input) {\n    answer {\n      id\n      ... on DateAnswer {\n        value\n      }\n    }\n    clientMutationId\n  }\n}\n\nmutation SaveDefaultListAnswer($input: SaveDefaultListAnswerInput!) {\n  saveDefaultListAnswer(input: $input) {\n    answer {\n      id\n      ... on ListAnswer {\n        value\n      }\n    }\n    clientMutationId\n  }\n}\n\nmutation SaveDefaultTableAnswer($input: SaveDefaultTableAnswerInput!) {\n  saveDefaultTableAnswer(input: $input) {\n    answer {\n      id\n      ... on TableAnswer {\n        value {\n          id\n        }\n      }\n    }\n    clientMutationId\n  }\n}\n\nmutation RemoveDefaultAnswer($input: RemoveDefaultAnswerInput!) {\n  removeDefaultAnswer(input: $input) {\n    question {\n      id\n      slug\n    }\n    clientMutationId\n  }\n}": types.GetAllDocumentsDocument,
    "query GetForm($slug: String!) {\n  allForms(filter: [{slugs: [$slug]}]) {\n    edges {\n      node {\n        id\n        name\n        slug\n        description\n        isPublished\n        isArchived\n        meta\n        createdByUser\n        createdByGroup\n      }\n    }\n  }\n}\n\nquery GetAllForms($filter: [FormFilterSetType], $order: [FormOrderSetType], $first: Int, $after: String, $offset: Int) {\n  allForms(\n    filter: $filter\n    order: $order\n    first: $first\n    after: $after\n    offset: $offset\n  ) {\n    pageInfo {\n      hasNextPage\n      endCursor\n    }\n    totalCount\n    edges {\n      node {\n        id\n        slug\n        name\n        description\n        isPublished\n        isArchived\n        meta\n        createdByUser\n        createdByGroup\n      }\n    }\n  }\n}\n\nquery CheckFormSlug($slug: String!) {\n  allForms(filter: [{slugs: [$slug]}]) {\n    edges {\n      node {\n        id\n        slug\n      }\n    }\n  }\n}\n\nmutation SaveForm($input: SaveFormInput!) {\n  saveForm(input: $input) {\n    form {\n      id\n      slug\n      name\n      description\n      isPublished\n      isArchived\n      meta\n      createdByUser\n      createdByGroup\n    }\n    clientMutationId\n  }\n}\n\nmutation CopyForm($input: CopyFormInput!) {\n  copyForm(input: $input) {\n    form {\n      id\n      slug\n      name\n      description\n      isPublished\n      isArchived\n      meta\n    }\n    clientMutationId\n  }\n}\n\nmutation AddFormQuestion($input: AddFormQuestionInput!) {\n  addFormQuestion(input: $input) {\n    form {\n      id\n      slug\n      name\n    }\n    clientMutationId\n  }\n}\n\nmutation RemoveFormQuestion($input: RemoveFormQuestionInput!) {\n  removeFormQuestion(input: $input) {\n    form {\n      id\n      slug\n      name\n    }\n    clientMutationId\n  }\n}\n\nmutation ReorderFormQuestions($input: ReorderFormQuestionsInput!) {\n  reorderFormQuestions(input: $input) {\n    form {\n      id\n      slug\n      name\n    }\n    clientMutationId\n  }\n}": types.GetFormDocument,
    "query CheckOptionSlug($slug: String!) {\n  allQuestions {\n    edges {\n      node {\n        ... on ChoiceQuestion {\n          options(filter: [{slug: $slug}]) {\n            edges {\n              node {\n                id\n                slug\n              }\n            }\n          }\n        }\n        ... on MultipleChoiceQuestion {\n          options(filter: [{slug: $slug}]) {\n            edges {\n              node {\n                id\n                slug\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}\n\nmutation SaveOption($input: SaveOptionInput!) {\n  saveOption(input: $input) {\n    option {\n      id\n      slug\n      label\n      isHidden\n      meta\n    }\n    clientMutationId\n  }\n}\n\nmutation CopyOption($input: CopyOptionInput!) {\n  copyOption(input: $input) {\n    option {\n      id\n      slug\n      label\n      isHidden\n      meta\n    }\n    clientMutationId\n  }\n}": types.CheckOptionSlugDocument,
    "query GetAllQuestions($filter: [QuestionFilterSetType], $order: [QuestionOrderSetType], $first: Int, $after: String) {\n  allQuestions(filter: $filter, order: $order, first: $first, after: $after) {\n    edges {\n      node {\n        id\n        slug\n        label\n        isRequired\n        isHidden\n        isArchived\n        meta\n        infoText\n      }\n    }\n  }\n}\n\nquery SearchQuestions($search: String!) {\n  allQuestions(filter: [{search: $search}]) {\n    edges {\n      node {\n        id\n        slug\n        label\n        isArchived\n      }\n    }\n  }\n}\n\nquery CheckQuestionSlug($slug: String!) {\n  allQuestions(filter: [{slugs: [$slug]}]) {\n    edges {\n      node {\n        id\n        slug\n      }\n    }\n  }\n}\n\nmutation SaveTextQuestion($input: SaveTextQuestionInput!) {\n  saveTextQuestion(input: $input) {\n    question {\n      id\n      slug\n      label\n      isRequired\n      isHidden\n      isArchived\n      meta\n      infoText\n      ... on TextQuestion {\n        minLength\n        maxLength\n        placeholder\n        hintText\n      }\n    }\n    clientMutationId\n  }\n}\n\nmutation SaveTextareaQuestion($input: SaveTextareaQuestionInput!) {\n  saveTextareaQuestion(input: $input) {\n    question {\n      id\n      slug\n      label\n      isRequired\n      isHidden\n      isArchived\n      meta\n      infoText\n      ... on TextareaQuestion {\n        minLength\n        maxLength\n        placeholder\n        hintText\n      }\n    }\n    clientMutationId\n  }\n}\n\nmutation SaveIntegerQuestion($input: SaveIntegerQuestionInput!) {\n  saveIntegerQuestion(input: $input) {\n    question {\n      id\n      slug\n      label\n      isRequired\n      isHidden\n      isArchived\n      meta\n      infoText\n      ... on IntegerQuestion {\n        minValue\n        maxValue\n        placeholder\n        hintText\n      }\n    }\n    clientMutationId\n  }\n}\n\nmutation SaveFloatQuestion($input: SaveFloatQuestionInput!) {\n  saveFloatQuestion(input: $input) {\n    question {\n      id\n      slug\n      label\n      isRequired\n      isHidden\n      isArchived\n      meta\n      infoText\n      ... on FloatQuestion {\n        minValue\n        maxValue\n        placeholder\n        hintText\n      }\n    }\n    clientMutationId\n  }\n}\n\nmutation SaveDateQuestion($input: SaveDateQuestionInput!) {\n  saveDateQuestion(input: $input) {\n    question {\n      id\n      slug\n      label\n      isRequired\n      isHidden\n      isArchived\n      meta\n      infoText\n      ... on DateQuestion {\n        hintText\n      }\n    }\n    clientMutationId\n  }\n}\n\nmutation SaveChoiceQuestion($input: SaveChoiceQuestionInput!) {\n  saveChoiceQuestion(input: $input) {\n    question {\n      id\n      slug\n      label\n      isRequired\n      isHidden\n      isArchived\n      meta\n      infoText\n      ... on ChoiceQuestion {\n        hintText\n        options {\n          edges {\n            node {\n              id\n              slug\n              label\n              isHidden\n            }\n          }\n        }\n      }\n    }\n    clientMutationId\n  }\n}\n\nmutation SaveMultipleChoiceQuestion($input: SaveMultipleChoiceQuestionInput!) {\n  saveMultipleChoiceQuestion(input: $input) {\n    question {\n      id\n      slug\n      label\n      isRequired\n      isHidden\n      isArchived\n      meta\n      infoText\n      ... on MultipleChoiceQuestion {\n        hintText\n        options {\n          edges {\n            node {\n              id\n              slug\n              label\n              isHidden\n            }\n          }\n        }\n      }\n    }\n    clientMutationId\n  }\n}\n\nmutation SaveDynamicChoiceQuestion($input: SaveDynamicChoiceQuestionInput!) {\n  saveDynamicChoiceQuestion(input: $input) {\n    question {\n      id\n      slug\n      label\n      isRequired\n      isHidden\n      isArchived\n      meta\n      infoText\n      ... on DynamicChoiceQuestion {\n        hintText\n        dataSource\n      }\n    }\n    clientMutationId\n  }\n}\n\nmutation SaveDynamicMultipleChoiceQuestion($input: SaveDynamicMultipleChoiceQuestionInput!) {\n  saveDynamicMultipleChoiceQuestion(input: $input) {\n    question {\n      id\n      slug\n      label\n      isRequired\n      isHidden\n      isArchived\n      meta\n      infoText\n      ... on DynamicMultipleChoiceQuestion {\n        hintText\n        dataSource\n      }\n    }\n    clientMutationId\n  }\n}\n\nmutation SaveTableQuestion($input: SaveTableQuestionInput!) {\n  saveTableQuestion(input: $input) {\n    question {\n      id\n      slug\n      label\n      isRequired\n      isHidden\n      isArchived\n      meta\n      infoText\n      ... on TableQuestion {\n        hintText\n      }\n    }\n    clientMutationId\n  }\n}\n\nmutation SaveFormQuestion($input: SaveFormQuestionInput!) {\n  saveFormQuestion(input: $input) {\n    question {\n      id\n      slug\n      label\n      isRequired\n      isHidden\n      isArchived\n      meta\n      infoText\n      ... on FormQuestion {\n        subForm {\n          id\n          slug\n          name\n        }\n      }\n    }\n    clientMutationId\n  }\n}\n\nmutation SaveFilesQuestion($input: SaveFilesQuestionInput!) {\n  saveFilesQuestion(input: $input) {\n    question {\n      id\n      slug\n      label\n      isRequired\n      isHidden\n      isArchived\n      meta\n      infoText\n      ... on FilesQuestion {\n        hintText\n      }\n    }\n    clientMutationId\n  }\n}\n\nmutation SaveStaticQuestion($input: SaveStaticQuestionInput!) {\n  saveStaticQuestion(input: $input) {\n    question {\n      id\n      slug\n      label\n      isRequired\n      isHidden\n      isArchived\n      meta\n      infoText\n      ... on StaticQuestion {\n        staticContent\n      }\n    }\n    clientMutationId\n  }\n}\n\nmutation SaveCalculatedFloatQuestion($input: SaveCalculatedFloatQuestionInput!) {\n  saveCalculatedFloatQuestion(input: $input) {\n    question {\n      id\n      slug\n      label\n      isRequired\n      isHidden\n      isArchived\n      meta\n      infoText\n      ... on CalculatedFloatQuestion {\n        calcExpression\n        hintText\n      }\n    }\n    clientMutationId\n  }\n}\n\nmutation SaveActionButtonQuestion($input: SaveActionButtonQuestionInput!) {\n  saveActionButtonQuestion(input: $input) {\n    question {\n      id\n      slug\n      label\n      isRequired\n      isHidden\n      isArchived\n      meta\n      infoText\n      ... on ActionButtonQuestion {\n        action\n        color\n        validateOnEnter\n        showValidation\n      }\n    }\n    clientMutationId\n  }\n}\n\nmutation CopyQuestion($input: CopyQuestionInput!) {\n  copyQuestion(input: $input) {\n    question {\n      id\n      slug\n      label\n    }\n    clientMutationId\n  }\n}": types.GetAllQuestionsDocument,
    "query GetAllFormatValidators {\n  allFormatValidators {\n    edges {\n      node {\n        slug\n        name\n        regex\n        allowedQuestionTypes\n      }\n    }\n  }\n}\n\nquery GetAllDataSources {\n  __type(name: \"DataSource\") {\n    enumValues {\n      name\n      description\n    }\n  }\n}\n\nquery CheckDocumentValidity($id: ID!, $dataSourceContext: JSONString) {\n  documentValidity(id: $id, dataSourceContext: $dataSourceContext) {\n    edges {\n      node {\n        id\n        isValid\n        errors {\n          slug\n          errorMsg\n        }\n      }\n    }\n  }\n}": types.GetAllFormatValidatorsDocument,
    "query GetAllWorkItems($filter: [WorkItemFilterSetType], $order: [WorkItemOrderSetType], $first: Int, $after: String) {\n  allWorkItems(filter: $filter, order: $order, first: $first, after: $after) {\n    edges {\n      node {\n        id\n        status\n        createdAt\n        closedAt\n        meta\n        addressedGroups\n        assignedUsers\n        case {\n          id\n          document {\n            id\n            form {\n              id\n              slug\n              name\n            }\n          }\n        }\n        task {\n          id\n          slug\n          name\n        }\n      }\n    }\n  }\n}\n\nquery GetWorkItemStatus($id: ID!) {\n  allWorkItems(filter: [{id: $id}]) {\n    edges {\n      node {\n        id\n        status\n        meta\n      }\n    }\n  }\n}\n\nmutation CompleteWorkItem($input: CompleteWorkItemInput!) {\n  completeWorkItem(input: $input) {\n    workItem {\n      id\n      status\n      closedAt\n    }\n    clientMutationId\n  }\n}\n\nmutation CancelWorkItem($input: CancelWorkItemInput!) {\n  cancelWorkItem(input: $input) {\n    workItem {\n      id\n      status\n      closedAt\n    }\n    clientMutationId\n  }\n}\n\nmutation SkipWorkItem($input: SkipWorkItemInput!) {\n  skipWorkItem(input: $input) {\n    workItem {\n      id\n      status\n      closedAt\n    }\n    clientMutationId\n  }\n}": types.GetAllWorkItemsDocument,
};

/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 *
 *
 * @example
 * ```ts
 * const query = graphql(`query GetUser($id: ID!) { user(id: $id) { name } }`);
 * ```
 *
 * The query argument is unknown!
 * Please regenerate the types.
 */
export function graphql(source: string): unknown;

/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "query GetAllDocuments($filter: [DocumentFilterSetType], $order: [DocumentOrderSetType], $first: Int, $after: String) {\n  allDocuments(filter: $filter, order: $order, first: $first, after: $after) {\n    edges {\n      node {\n        id\n        createdAt\n        modifiedAt\n        createdByUser\n        createdByGroup\n        meta\n        form {\n          id\n          slug\n          name\n        }\n      }\n    }\n  }\n}\n\nquery GetDocument($id: ID!) {\n  allDocuments(filter: [{id: $id}]) {\n    edges {\n      node {\n        id\n        createdAt\n        modifiedAt\n        createdByUser\n        createdByGroup\n        meta\n        form {\n          id\n          slug\n          name\n          questions {\n            edges {\n              node {\n                id\n                slug\n                label\n              }\n            }\n          }\n        }\n        answers {\n          edges {\n            node {\n              id\n              meta\n              question {\n                id\n                slug\n              }\n              ... on StringAnswer {\n                stringValue: value\n              }\n              ... on IntegerAnswer {\n                integerValue: value\n              }\n              ... on FloatAnswer {\n                floatValue: value\n              }\n              ... on ListAnswer {\n                listValue: value\n              }\n              ... on DateAnswer {\n                dateValue: value\n              }\n              ... on FilesAnswer {\n                filesValue: value {\n                  id\n                  name\n                  downloadUrl\n                  uploadUrl\n                  metadata\n                }\n              }\n              ... on TableAnswer {\n                tableValue: value {\n                  id\n                  form {\n                    id\n                    slug\n                  }\n                  answers {\n                    edges {\n                      node {\n                        id\n                        question {\n                          id\n                          slug\n                        }\n                        ... on StringAnswer {\n                          stringValue: value\n                        }\n                        ... on IntegerAnswer {\n                          integerValue: value\n                        }\n                        ... on FloatAnswer {\n                          floatValue: value\n                        }\n                        ... on ListAnswer {\n                          listValue: value\n                        }\n                        ... on DateAnswer {\n                          dateValue: value\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}\n\nmutation SaveDocument($input: SaveDocumentInput!) {\n  saveDocument(input: $input) {\n    document {\n      id\n      createdAt\n      modifiedAt\n      meta\n      form {\n        id\n        slug\n        name\n      }\n    }\n    clientMutationId\n  }\n}\n\nmutation CopyDocument($input: CopyDocumentInput!) {\n  copyDocument(input: $input) {\n    document {\n      id\n      createdAt\n      modifiedAt\n      meta\n      form {\n        id\n        slug\n        name\n      }\n    }\n    clientMutationId\n  }\n}\n\nmutation RemoveDocument($input: RemoveDocumentInput!) {\n  removeDocument(input: $input) {\n    clientMutationId\n  }\n}\n\nmutation SaveDocumentStringAnswer($input: SaveDocumentStringAnswerInput!) {\n  saveDocumentStringAnswer(input: $input) {\n    answer {\n      id\n      meta\n      question {\n        id\n        slug\n      }\n      ... on StringAnswer {\n        value\n      }\n    }\n    clientMutationId\n  }\n}\n\nmutation SaveDocumentIntegerAnswer($input: SaveDocumentIntegerAnswerInput!) {\n  saveDocumentIntegerAnswer(input: $input) {\n    answer {\n      id\n      meta\n      question {\n        id\n        slug\n      }\n      ... on IntegerAnswer {\n        value\n      }\n    }\n    clientMutationId\n  }\n}\n\nmutation SaveDocumentFloatAnswer($input: SaveDocumentFloatAnswerInput!) {\n  saveDocumentFloatAnswer(input: $input) {\n    answer {\n      id\n      meta\n      question {\n        id\n        slug\n      }\n      ... on FloatAnswer {\n        value\n      }\n    }\n    clientMutationId\n  }\n}\n\nmutation SaveDocumentDateAnswer($input: SaveDocumentDateAnswerInput!) {\n  saveDocumentDateAnswer(input: $input) {\n    answer {\n      id\n      meta\n      question {\n        id\n        slug\n      }\n      ... on DateAnswer {\n        value\n      }\n    }\n    clientMutationId\n  }\n}\n\nmutation SaveDocumentListAnswer($input: SaveDocumentListAnswerInput!) {\n  saveDocumentListAnswer(input: $input) {\n    answer {\n      id\n      meta\n      question {\n        id\n        slug\n      }\n      ... on ListAnswer {\n        value\n      }\n    }\n    clientMutationId\n  }\n}\n\nmutation SaveDocumentTableAnswer($input: SaveDocumentTableAnswerInput!) {\n  saveDocumentTableAnswer(input: $input) {\n    answer {\n      id\n      meta\n      question {\n        id\n        slug\n      }\n      ... on TableAnswer {\n        value {\n          id\n          form {\n            id\n            slug\n          }\n        }\n      }\n    }\n    clientMutationId\n  }\n}\n\nmutation SaveDocumentFilesAnswer($input: SaveDocumentFilesAnswerInput!) {\n  saveDocumentFilesAnswer(input: $input) {\n    answer {\n      id\n      meta\n      question {\n        id\n        slug\n      }\n      ... on FilesAnswer {\n        value {\n          id\n          name\n          downloadUrl\n          uploadUrl\n          metadata\n        }\n      }\n    }\n    clientMutationId\n  }\n}\n\nmutation RemoveAnswer($input: RemoveAnswerInput!) {\n  removeAnswer(input: $input) {\n    answer {\n      id\n    }\n    clientMutationId\n  }\n}\n\nmutation SaveDefaultStringAnswer($input: SaveDefaultStringAnswerInput!) {\n  saveDefaultStringAnswer(input: $input) {\n    answer {\n      id\n      ... on StringAnswer {\n        value\n      }\n    }\n    clientMutationId\n  }\n}\n\nmutation SaveDefaultIntegerAnswer($input: SaveDefaultIntegerAnswerInput!) {\n  saveDefaultIntegerAnswer(input: $input) {\n    answer {\n      id\n      ... on IntegerAnswer {\n        value\n      }\n    }\n    clientMutationId\n  }\n}\n\nmutation SaveDefaultFloatAnswer($input: SaveDefaultFloatAnswerInput!) {\n  saveDefaultFloatAnswer(input: $input) {\n    answer {\n      id\n      ... on FloatAnswer {\n        value\n      }\n    }\n    clientMutationId\n  }\n}\n\nmutation SaveDefaultDateAnswer($input: SaveDefaultDateAnswerInput!) {\n  saveDefaultDateAnswer(input: $input) {\n    answer {\n      id\n      ... on DateAnswer {\n        value\n      }\n    }\n    clientMutationId\n  }\n}\n\nmutation SaveDefaultListAnswer($input: SaveDefaultListAnswerInput!) {\n  saveDefaultListAnswer(input: $input) {\n    answer {\n      id\n      ... on ListAnswer {\n        value\n      }\n    }\n    clientMutationId\n  }\n}\n\nmutation SaveDefaultTableAnswer($input: SaveDefaultTableAnswerInput!) {\n  saveDefaultTableAnswer(input: $input) {\n    answer {\n      id\n      ... on TableAnswer {\n        value {\n          id\n        }\n      }\n    }\n    clientMutationId\n  }\n}\n\nmutation RemoveDefaultAnswer($input: RemoveDefaultAnswerInput!) {\n  removeDefaultAnswer(input: $input) {\n    question {\n      id\n      slug\n    }\n    clientMutationId\n  }\n}"): (typeof documents)["query GetAllDocuments($filter: [DocumentFilterSetType], $order: [DocumentOrderSetType], $first: Int, $after: String) {\n  allDocuments(filter: $filter, order: $order, first: $first, after: $after) {\n    edges {\n      node {\n        id\n        createdAt\n        modifiedAt\n        createdByUser\n        createdByGroup\n        meta\n        form {\n          id\n          slug\n          name\n        }\n      }\n    }\n  }\n}\n\nquery GetDocument($id: ID!) {\n  allDocuments(filter: [{id: $id}]) {\n    edges {\n      node {\n        id\n        createdAt\n        modifiedAt\n        createdByUser\n        createdByGroup\n        meta\n        form {\n          id\n          slug\n          name\n          questions {\n            edges {\n              node {\n                id\n                slug\n                label\n              }\n            }\n          }\n        }\n        answers {\n          edges {\n            node {\n              id\n              meta\n              question {\n                id\n                slug\n              }\n              ... on StringAnswer {\n                stringValue: value\n              }\n              ... on IntegerAnswer {\n                integerValue: value\n              }\n              ... on FloatAnswer {\n                floatValue: value\n              }\n              ... on ListAnswer {\n                listValue: value\n              }\n              ... on DateAnswer {\n                dateValue: value\n              }\n              ... on FilesAnswer {\n                filesValue: value {\n                  id\n                  name\n                  downloadUrl\n                  uploadUrl\n                  metadata\n                }\n              }\n              ... on TableAnswer {\n                tableValue: value {\n                  id\n                  form {\n                    id\n                    slug\n                  }\n                  answers {\n                    edges {\n                      node {\n                        id\n                        question {\n                          id\n                          slug\n                        }\n                        ... on StringAnswer {\n                          stringValue: value\n                        }\n                        ... on IntegerAnswer {\n                          integerValue: value\n                        }\n                        ... on FloatAnswer {\n                          floatValue: value\n                        }\n                        ... on ListAnswer {\n                          listValue: value\n                        }\n                        ... on DateAnswer {\n                          dateValue: value\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}\n\nmutation SaveDocument($input: SaveDocumentInput!) {\n  saveDocument(input: $input) {\n    document {\n      id\n      createdAt\n      modifiedAt\n      meta\n      form {\n        id\n        slug\n        name\n      }\n    }\n    clientMutationId\n  }\n}\n\nmutation CopyDocument($input: CopyDocumentInput!) {\n  copyDocument(input: $input) {\n    document {\n      id\n      createdAt\n      modifiedAt\n      meta\n      form {\n        id\n        slug\n        name\n      }\n    }\n    clientMutationId\n  }\n}\n\nmutation RemoveDocument($input: RemoveDocumentInput!) {\n  removeDocument(input: $input) {\n    clientMutationId\n  }\n}\n\nmutation SaveDocumentStringAnswer($input: SaveDocumentStringAnswerInput!) {\n  saveDocumentStringAnswer(input: $input) {\n    answer {\n      id\n      meta\n      question {\n        id\n        slug\n      }\n      ... on StringAnswer {\n        value\n      }\n    }\n    clientMutationId\n  }\n}\n\nmutation SaveDocumentIntegerAnswer($input: SaveDocumentIntegerAnswerInput!) {\n  saveDocumentIntegerAnswer(input: $input) {\n    answer {\n      id\n      meta\n      question {\n        id\n        slug\n      }\n      ... on IntegerAnswer {\n        value\n      }\n    }\n    clientMutationId\n  }\n}\n\nmutation SaveDocumentFloatAnswer($input: SaveDocumentFloatAnswerInput!) {\n  saveDocumentFloatAnswer(input: $input) {\n    answer {\n      id\n      meta\n      question {\n        id\n        slug\n      }\n      ... on FloatAnswer {\n        value\n      }\n    }\n    clientMutationId\n  }\n}\n\nmutation SaveDocumentDateAnswer($input: SaveDocumentDateAnswerInput!) {\n  saveDocumentDateAnswer(input: $input) {\n    answer {\n      id\n      meta\n      question {\n        id\n        slug\n      }\n      ... on DateAnswer {\n        value\n      }\n    }\n    clientMutationId\n  }\n}\n\nmutation SaveDocumentListAnswer($input: SaveDocumentListAnswerInput!) {\n  saveDocumentListAnswer(input: $input) {\n    answer {\n      id\n      meta\n      question {\n        id\n        slug\n      }\n      ... on ListAnswer {\n        value\n      }\n    }\n    clientMutationId\n  }\n}\n\nmutation SaveDocumentTableAnswer($input: SaveDocumentTableAnswerInput!) {\n  saveDocumentTableAnswer(input: $input) {\n    answer {\n      id\n      meta\n      question {\n        id\n        slug\n      }\n      ... on TableAnswer {\n        value {\n          id\n          form {\n            id\n            slug\n          }\n        }\n      }\n    }\n    clientMutationId\n  }\n}\n\nmutation SaveDocumentFilesAnswer($input: SaveDocumentFilesAnswerInput!) {\n  saveDocumentFilesAnswer(input: $input) {\n    answer {\n      id\n      meta\n      question {\n        id\n        slug\n      }\n      ... on FilesAnswer {\n        value {\n          id\n          name\n          downloadUrl\n          uploadUrl\n          metadata\n        }\n      }\n    }\n    clientMutationId\n  }\n}\n\nmutation RemoveAnswer($input: RemoveAnswerInput!) {\n  removeAnswer(input: $input) {\n    answer {\n      id\n    }\n    clientMutationId\n  }\n}\n\nmutation SaveDefaultStringAnswer($input: SaveDefaultStringAnswerInput!) {\n  saveDefaultStringAnswer(input: $input) {\n    answer {\n      id\n      ... on StringAnswer {\n        value\n      }\n    }\n    clientMutationId\n  }\n}\n\nmutation SaveDefaultIntegerAnswer($input: SaveDefaultIntegerAnswerInput!) {\n  saveDefaultIntegerAnswer(input: $input) {\n    answer {\n      id\n      ... on IntegerAnswer {\n        value\n      }\n    }\n    clientMutationId\n  }\n}\n\nmutation SaveDefaultFloatAnswer($input: SaveDefaultFloatAnswerInput!) {\n  saveDefaultFloatAnswer(input: $input) {\n    answer {\n      id\n      ... on FloatAnswer {\n        value\n      }\n    }\n    clientMutationId\n  }\n}\n\nmutation SaveDefaultDateAnswer($input: SaveDefaultDateAnswerInput!) {\n  saveDefaultDateAnswer(input: $input) {\n    answer {\n      id\n      ... on DateAnswer {\n        value\n      }\n    }\n    clientMutationId\n  }\n}\n\nmutation SaveDefaultListAnswer($input: SaveDefaultListAnswerInput!) {\n  saveDefaultListAnswer(input: $input) {\n    answer {\n      id\n      ... on ListAnswer {\n        value\n      }\n    }\n    clientMutationId\n  }\n}\n\nmutation SaveDefaultTableAnswer($input: SaveDefaultTableAnswerInput!) {\n  saveDefaultTableAnswer(input: $input) {\n    answer {\n      id\n      ... on TableAnswer {\n        value {\n          id\n        }\n      }\n    }\n    clientMutationId\n  }\n}\n\nmutation RemoveDefaultAnswer($input: RemoveDefaultAnswerInput!) {\n  removeDefaultAnswer(input: $input) {\n    question {\n      id\n      slug\n    }\n    clientMutationId\n  }\n}"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "query GetForm($slug: String!) {\n  allForms(filter: [{slugs: [$slug]}]) {\n    edges {\n      node {\n        id\n        name\n        slug\n        description\n        isPublished\n        isArchived\n        meta\n        createdByUser\n        createdByGroup\n      }\n    }\n  }\n}\n\nquery GetAllForms($filter: [FormFilterSetType], $order: [FormOrderSetType], $first: Int, $after: String, $offset: Int) {\n  allForms(\n    filter: $filter\n    order: $order\n    first: $first\n    after: $after\n    offset: $offset\n  ) {\n    pageInfo {\n      hasNextPage\n      endCursor\n    }\n    totalCount\n    edges {\n      node {\n        id\n        slug\n        name\n        description\n        isPublished\n        isArchived\n        meta\n        createdByUser\n        createdByGroup\n      }\n    }\n  }\n}\n\nquery CheckFormSlug($slug: String!) {\n  allForms(filter: [{slugs: [$slug]}]) {\n    edges {\n      node {\n        id\n        slug\n      }\n    }\n  }\n}\n\nmutation SaveForm($input: SaveFormInput!) {\n  saveForm(input: $input) {\n    form {\n      id\n      slug\n      name\n      description\n      isPublished\n      isArchived\n      meta\n      createdByUser\n      createdByGroup\n    }\n    clientMutationId\n  }\n}\n\nmutation CopyForm($input: CopyFormInput!) {\n  copyForm(input: $input) {\n    form {\n      id\n      slug\n      name\n      description\n      isPublished\n      isArchived\n      meta\n    }\n    clientMutationId\n  }\n}\n\nmutation AddFormQuestion($input: AddFormQuestionInput!) {\n  addFormQuestion(input: $input) {\n    form {\n      id\n      slug\n      name\n    }\n    clientMutationId\n  }\n}\n\nmutation RemoveFormQuestion($input: RemoveFormQuestionInput!) {\n  removeFormQuestion(input: $input) {\n    form {\n      id\n      slug\n      name\n    }\n    clientMutationId\n  }\n}\n\nmutation ReorderFormQuestions($input: ReorderFormQuestionsInput!) {\n  reorderFormQuestions(input: $input) {\n    form {\n      id\n      slug\n      name\n    }\n    clientMutationId\n  }\n}"): (typeof documents)["query GetForm($slug: String!) {\n  allForms(filter: [{slugs: [$slug]}]) {\n    edges {\n      node {\n        id\n        name\n        slug\n        description\n        isPublished\n        isArchived\n        meta\n        createdByUser\n        createdByGroup\n      }\n    }\n  }\n}\n\nquery GetAllForms($filter: [FormFilterSetType], $order: [FormOrderSetType], $first: Int, $after: String, $offset: Int) {\n  allForms(\n    filter: $filter\n    order: $order\n    first: $first\n    after: $after\n    offset: $offset\n  ) {\n    pageInfo {\n      hasNextPage\n      endCursor\n    }\n    totalCount\n    edges {\n      node {\n        id\n        slug\n        name\n        description\n        isPublished\n        isArchived\n        meta\n        createdByUser\n        createdByGroup\n      }\n    }\n  }\n}\n\nquery CheckFormSlug($slug: String!) {\n  allForms(filter: [{slugs: [$slug]}]) {\n    edges {\n      node {\n        id\n        slug\n      }\n    }\n  }\n}\n\nmutation SaveForm($input: SaveFormInput!) {\n  saveForm(input: $input) {\n    form {\n      id\n      slug\n      name\n      description\n      isPublished\n      isArchived\n      meta\n      createdByUser\n      createdByGroup\n    }\n    clientMutationId\n  }\n}\n\nmutation CopyForm($input: CopyFormInput!) {\n  copyForm(input: $input) {\n    form {\n      id\n      slug\n      name\n      description\n      isPublished\n      isArchived\n      meta\n    }\n    clientMutationId\n  }\n}\n\nmutation AddFormQuestion($input: AddFormQuestionInput!) {\n  addFormQuestion(input: $input) {\n    form {\n      id\n      slug\n      name\n    }\n    clientMutationId\n  }\n}\n\nmutation RemoveFormQuestion($input: RemoveFormQuestionInput!) {\n  removeFormQuestion(input: $input) {\n    form {\n      id\n      slug\n      name\n    }\n    clientMutationId\n  }\n}\n\nmutation ReorderFormQuestions($input: ReorderFormQuestionsInput!) {\n  reorderFormQuestions(input: $input) {\n    form {\n      id\n      slug\n      name\n    }\n    clientMutationId\n  }\n}"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "query CheckOptionSlug($slug: String!) {\n  allQuestions {\n    edges {\n      node {\n        ... on ChoiceQuestion {\n          options(filter: [{slug: $slug}]) {\n            edges {\n              node {\n                id\n                slug\n              }\n            }\n          }\n        }\n        ... on MultipleChoiceQuestion {\n          options(filter: [{slug: $slug}]) {\n            edges {\n              node {\n                id\n                slug\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}\n\nmutation SaveOption($input: SaveOptionInput!) {\n  saveOption(input: $input) {\n    option {\n      id\n      slug\n      label\n      isHidden\n      meta\n    }\n    clientMutationId\n  }\n}\n\nmutation CopyOption($input: CopyOptionInput!) {\n  copyOption(input: $input) {\n    option {\n      id\n      slug\n      label\n      isHidden\n      meta\n    }\n    clientMutationId\n  }\n}"): (typeof documents)["query CheckOptionSlug($slug: String!) {\n  allQuestions {\n    edges {\n      node {\n        ... on ChoiceQuestion {\n          options(filter: [{slug: $slug}]) {\n            edges {\n              node {\n                id\n                slug\n              }\n            }\n          }\n        }\n        ... on MultipleChoiceQuestion {\n          options(filter: [{slug: $slug}]) {\n            edges {\n              node {\n                id\n                slug\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}\n\nmutation SaveOption($input: SaveOptionInput!) {\n  saveOption(input: $input) {\n    option {\n      id\n      slug\n      label\n      isHidden\n      meta\n    }\n    clientMutationId\n  }\n}\n\nmutation CopyOption($input: CopyOptionInput!) {\n  copyOption(input: $input) {\n    option {\n      id\n      slug\n      label\n      isHidden\n      meta\n    }\n    clientMutationId\n  }\n}"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "query GetAllQuestions($filter: [QuestionFilterSetType], $order: [QuestionOrderSetType], $first: Int, $after: String) {\n  allQuestions(filter: $filter, order: $order, first: $first, after: $after) {\n    edges {\n      node {\n        id\n        slug\n        label\n        isRequired\n        isHidden\n        isArchived\n        meta\n        infoText\n      }\n    }\n  }\n}\n\nquery SearchQuestions($search: String!) {\n  allQuestions(filter: [{search: $search}]) {\n    edges {\n      node {\n        id\n        slug\n        label\n        isArchived\n      }\n    }\n  }\n}\n\nquery CheckQuestionSlug($slug: String!) {\n  allQuestions(filter: [{slugs: [$slug]}]) {\n    edges {\n      node {\n        id\n        slug\n      }\n    }\n  }\n}\n\nmutation SaveTextQuestion($input: SaveTextQuestionInput!) {\n  saveTextQuestion(input: $input) {\n    question {\n      id\n      slug\n      label\n      isRequired\n      isHidden\n      isArchived\n      meta\n      infoText\n      ... on TextQuestion {\n        minLength\n        maxLength\n        placeholder\n        hintText\n      }\n    }\n    clientMutationId\n  }\n}\n\nmutation SaveTextareaQuestion($input: SaveTextareaQuestionInput!) {\n  saveTextareaQuestion(input: $input) {\n    question {\n      id\n      slug\n      label\n      isRequired\n      isHidden\n      isArchived\n      meta\n      infoText\n      ... on TextareaQuestion {\n        minLength\n        maxLength\n        placeholder\n        hintText\n      }\n    }\n    clientMutationId\n  }\n}\n\nmutation SaveIntegerQuestion($input: SaveIntegerQuestionInput!) {\n  saveIntegerQuestion(input: $input) {\n    question {\n      id\n      slug\n      label\n      isRequired\n      isHidden\n      isArchived\n      meta\n      infoText\n      ... on IntegerQuestion {\n        minValue\n        maxValue\n        placeholder\n        hintText\n      }\n    }\n    clientMutationId\n  }\n}\n\nmutation SaveFloatQuestion($input: SaveFloatQuestionInput!) {\n  saveFloatQuestion(input: $input) {\n    question {\n      id\n      slug\n      label\n      isRequired\n      isHidden\n      isArchived\n      meta\n      infoText\n      ... on FloatQuestion {\n        minValue\n        maxValue\n        placeholder\n        hintText\n      }\n    }\n    clientMutationId\n  }\n}\n\nmutation SaveDateQuestion($input: SaveDateQuestionInput!) {\n  saveDateQuestion(input: $input) {\n    question {\n      id\n      slug\n      label\n      isRequired\n      isHidden\n      isArchived\n      meta\n      infoText\n      ... on DateQuestion {\n        hintText\n      }\n    }\n    clientMutationId\n  }\n}\n\nmutation SaveChoiceQuestion($input: SaveChoiceQuestionInput!) {\n  saveChoiceQuestion(input: $input) {\n    question {\n      id\n      slug\n      label\n      isRequired\n      isHidden\n      isArchived\n      meta\n      infoText\n      ... on ChoiceQuestion {\n        hintText\n        options {\n          edges {\n            node {\n              id\n              slug\n              label\n              isHidden\n            }\n          }\n        }\n      }\n    }\n    clientMutationId\n  }\n}\n\nmutation SaveMultipleChoiceQuestion($input: SaveMultipleChoiceQuestionInput!) {\n  saveMultipleChoiceQuestion(input: $input) {\n    question {\n      id\n      slug\n      label\n      isRequired\n      isHidden\n      isArchived\n      meta\n      infoText\n      ... on MultipleChoiceQuestion {\n        hintText\n        options {\n          edges {\n            node {\n              id\n              slug\n              label\n              isHidden\n            }\n          }\n        }\n      }\n    }\n    clientMutationId\n  }\n}\n\nmutation SaveDynamicChoiceQuestion($input: SaveDynamicChoiceQuestionInput!) {\n  saveDynamicChoiceQuestion(input: $input) {\n    question {\n      id\n      slug\n      label\n      isRequired\n      isHidden\n      isArchived\n      meta\n      infoText\n      ... on DynamicChoiceQuestion {\n        hintText\n        dataSource\n      }\n    }\n    clientMutationId\n  }\n}\n\nmutation SaveDynamicMultipleChoiceQuestion($input: SaveDynamicMultipleChoiceQuestionInput!) {\n  saveDynamicMultipleChoiceQuestion(input: $input) {\n    question {\n      id\n      slug\n      label\n      isRequired\n      isHidden\n      isArchived\n      meta\n      infoText\n      ... on DynamicMultipleChoiceQuestion {\n        hintText\n        dataSource\n      }\n    }\n    clientMutationId\n  }\n}\n\nmutation SaveTableQuestion($input: SaveTableQuestionInput!) {\n  saveTableQuestion(input: $input) {\n    question {\n      id\n      slug\n      label\n      isRequired\n      isHidden\n      isArchived\n      meta\n      infoText\n      ... on TableQuestion {\n        hintText\n      }\n    }\n    clientMutationId\n  }\n}\n\nmutation SaveFormQuestion($input: SaveFormQuestionInput!) {\n  saveFormQuestion(input: $input) {\n    question {\n      id\n      slug\n      label\n      isRequired\n      isHidden\n      isArchived\n      meta\n      infoText\n      ... on FormQuestion {\n        subForm {\n          id\n          slug\n          name\n        }\n      }\n    }\n    clientMutationId\n  }\n}\n\nmutation SaveFilesQuestion($input: SaveFilesQuestionInput!) {\n  saveFilesQuestion(input: $input) {\n    question {\n      id\n      slug\n      label\n      isRequired\n      isHidden\n      isArchived\n      meta\n      infoText\n      ... on FilesQuestion {\n        hintText\n      }\n    }\n    clientMutationId\n  }\n}\n\nmutation SaveStaticQuestion($input: SaveStaticQuestionInput!) {\n  saveStaticQuestion(input: $input) {\n    question {\n      id\n      slug\n      label\n      isRequired\n      isHidden\n      isArchived\n      meta\n      infoText\n      ... on StaticQuestion {\n        staticContent\n      }\n    }\n    clientMutationId\n  }\n}\n\nmutation SaveCalculatedFloatQuestion($input: SaveCalculatedFloatQuestionInput!) {\n  saveCalculatedFloatQuestion(input: $input) {\n    question {\n      id\n      slug\n      label\n      isRequired\n      isHidden\n      isArchived\n      meta\n      infoText\n      ... on CalculatedFloatQuestion {\n        calcExpression\n        hintText\n      }\n    }\n    clientMutationId\n  }\n}\n\nmutation SaveActionButtonQuestion($input: SaveActionButtonQuestionInput!) {\n  saveActionButtonQuestion(input: $input) {\n    question {\n      id\n      slug\n      label\n      isRequired\n      isHidden\n      isArchived\n      meta\n      infoText\n      ... on ActionButtonQuestion {\n        action\n        color\n        validateOnEnter\n        showValidation\n      }\n    }\n    clientMutationId\n  }\n}\n\nmutation CopyQuestion($input: CopyQuestionInput!) {\n  copyQuestion(input: $input) {\n    question {\n      id\n      slug\n      label\n    }\n    clientMutationId\n  }\n}"): (typeof documents)["query GetAllQuestions($filter: [QuestionFilterSetType], $order: [QuestionOrderSetType], $first: Int, $after: String) {\n  allQuestions(filter: $filter, order: $order, first: $first, after: $after) {\n    edges {\n      node {\n        id\n        slug\n        label\n        isRequired\n        isHidden\n        isArchived\n        meta\n        infoText\n      }\n    }\n  }\n}\n\nquery SearchQuestions($search: String!) {\n  allQuestions(filter: [{search: $search}]) {\n    edges {\n      node {\n        id\n        slug\n        label\n        isArchived\n      }\n    }\n  }\n}\n\nquery CheckQuestionSlug($slug: String!) {\n  allQuestions(filter: [{slugs: [$slug]}]) {\n    edges {\n      node {\n        id\n        slug\n      }\n    }\n  }\n}\n\nmutation SaveTextQuestion($input: SaveTextQuestionInput!) {\n  saveTextQuestion(input: $input) {\n    question {\n      id\n      slug\n      label\n      isRequired\n      isHidden\n      isArchived\n      meta\n      infoText\n      ... on TextQuestion {\n        minLength\n        maxLength\n        placeholder\n        hintText\n      }\n    }\n    clientMutationId\n  }\n}\n\nmutation SaveTextareaQuestion($input: SaveTextareaQuestionInput!) {\n  saveTextareaQuestion(input: $input) {\n    question {\n      id\n      slug\n      label\n      isRequired\n      isHidden\n      isArchived\n      meta\n      infoText\n      ... on TextareaQuestion {\n        minLength\n        maxLength\n        placeholder\n        hintText\n      }\n    }\n    clientMutationId\n  }\n}\n\nmutation SaveIntegerQuestion($input: SaveIntegerQuestionInput!) {\n  saveIntegerQuestion(input: $input) {\n    question {\n      id\n      slug\n      label\n      isRequired\n      isHidden\n      isArchived\n      meta\n      infoText\n      ... on IntegerQuestion {\n        minValue\n        maxValue\n        placeholder\n        hintText\n      }\n    }\n    clientMutationId\n  }\n}\n\nmutation SaveFloatQuestion($input: SaveFloatQuestionInput!) {\n  saveFloatQuestion(input: $input) {\n    question {\n      id\n      slug\n      label\n      isRequired\n      isHidden\n      isArchived\n      meta\n      infoText\n      ... on FloatQuestion {\n        minValue\n        maxValue\n        placeholder\n        hintText\n      }\n    }\n    clientMutationId\n  }\n}\n\nmutation SaveDateQuestion($input: SaveDateQuestionInput!) {\n  saveDateQuestion(input: $input) {\n    question {\n      id\n      slug\n      label\n      isRequired\n      isHidden\n      isArchived\n      meta\n      infoText\n      ... on DateQuestion {\n        hintText\n      }\n    }\n    clientMutationId\n  }\n}\n\nmutation SaveChoiceQuestion($input: SaveChoiceQuestionInput!) {\n  saveChoiceQuestion(input: $input) {\n    question {\n      id\n      slug\n      label\n      isRequired\n      isHidden\n      isArchived\n      meta\n      infoText\n      ... on ChoiceQuestion {\n        hintText\n        options {\n          edges {\n            node {\n              id\n              slug\n              label\n              isHidden\n            }\n          }\n        }\n      }\n    }\n    clientMutationId\n  }\n}\n\nmutation SaveMultipleChoiceQuestion($input: SaveMultipleChoiceQuestionInput!) {\n  saveMultipleChoiceQuestion(input: $input) {\n    question {\n      id\n      slug\n      label\n      isRequired\n      isHidden\n      isArchived\n      meta\n      infoText\n      ... on MultipleChoiceQuestion {\n        hintText\n        options {\n          edges {\n            node {\n              id\n              slug\n              label\n              isHidden\n            }\n          }\n        }\n      }\n    }\n    clientMutationId\n  }\n}\n\nmutation SaveDynamicChoiceQuestion($input: SaveDynamicChoiceQuestionInput!) {\n  saveDynamicChoiceQuestion(input: $input) {\n    question {\n      id\n      slug\n      label\n      isRequired\n      isHidden\n      isArchived\n      meta\n      infoText\n      ... on DynamicChoiceQuestion {\n        hintText\n        dataSource\n      }\n    }\n    clientMutationId\n  }\n}\n\nmutation SaveDynamicMultipleChoiceQuestion($input: SaveDynamicMultipleChoiceQuestionInput!) {\n  saveDynamicMultipleChoiceQuestion(input: $input) {\n    question {\n      id\n      slug\n      label\n      isRequired\n      isHidden\n      isArchived\n      meta\n      infoText\n      ... on DynamicMultipleChoiceQuestion {\n        hintText\n        dataSource\n      }\n    }\n    clientMutationId\n  }\n}\n\nmutation SaveTableQuestion($input: SaveTableQuestionInput!) {\n  saveTableQuestion(input: $input) {\n    question {\n      id\n      slug\n      label\n      isRequired\n      isHidden\n      isArchived\n      meta\n      infoText\n      ... on TableQuestion {\n        hintText\n      }\n    }\n    clientMutationId\n  }\n}\n\nmutation SaveFormQuestion($input: SaveFormQuestionInput!) {\n  saveFormQuestion(input: $input) {\n    question {\n      id\n      slug\n      label\n      isRequired\n      isHidden\n      isArchived\n      meta\n      infoText\n      ... on FormQuestion {\n        subForm {\n          id\n          slug\n          name\n        }\n      }\n    }\n    clientMutationId\n  }\n}\n\nmutation SaveFilesQuestion($input: SaveFilesQuestionInput!) {\n  saveFilesQuestion(input: $input) {\n    question {\n      id\n      slug\n      label\n      isRequired\n      isHidden\n      isArchived\n      meta\n      infoText\n      ... on FilesQuestion {\n        hintText\n      }\n    }\n    clientMutationId\n  }\n}\n\nmutation SaveStaticQuestion($input: SaveStaticQuestionInput!) {\n  saveStaticQuestion(input: $input) {\n    question {\n      id\n      slug\n      label\n      isRequired\n      isHidden\n      isArchived\n      meta\n      infoText\n      ... on StaticQuestion {\n        staticContent\n      }\n    }\n    clientMutationId\n  }\n}\n\nmutation SaveCalculatedFloatQuestion($input: SaveCalculatedFloatQuestionInput!) {\n  saveCalculatedFloatQuestion(input: $input) {\n    question {\n      id\n      slug\n      label\n      isRequired\n      isHidden\n      isArchived\n      meta\n      infoText\n      ... on CalculatedFloatQuestion {\n        calcExpression\n        hintText\n      }\n    }\n    clientMutationId\n  }\n}\n\nmutation SaveActionButtonQuestion($input: SaveActionButtonQuestionInput!) {\n  saveActionButtonQuestion(input: $input) {\n    question {\n      id\n      slug\n      label\n      isRequired\n      isHidden\n      isArchived\n      meta\n      infoText\n      ... on ActionButtonQuestion {\n        action\n        color\n        validateOnEnter\n        showValidation\n      }\n    }\n    clientMutationId\n  }\n}\n\nmutation CopyQuestion($input: CopyQuestionInput!) {\n  copyQuestion(input: $input) {\n    question {\n      id\n      slug\n      label\n    }\n    clientMutationId\n  }\n}"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "query GetAllFormatValidators {\n  allFormatValidators {\n    edges {\n      node {\n        slug\n        name\n        regex\n        allowedQuestionTypes\n      }\n    }\n  }\n}\n\nquery GetAllDataSources {\n  __type(name: \"DataSource\") {\n    enumValues {\n      name\n      description\n    }\n  }\n}\n\nquery CheckDocumentValidity($id: ID!, $dataSourceContext: JSONString) {\n  documentValidity(id: $id, dataSourceContext: $dataSourceContext) {\n    edges {\n      node {\n        id\n        isValid\n        errors {\n          slug\n          errorMsg\n        }\n      }\n    }\n  }\n}"): (typeof documents)["query GetAllFormatValidators {\n  allFormatValidators {\n    edges {\n      node {\n        slug\n        name\n        regex\n        allowedQuestionTypes\n      }\n    }\n  }\n}\n\nquery GetAllDataSources {\n  __type(name: \"DataSource\") {\n    enumValues {\n      name\n      description\n    }\n  }\n}\n\nquery CheckDocumentValidity($id: ID!, $dataSourceContext: JSONString) {\n  documentValidity(id: $id, dataSourceContext: $dataSourceContext) {\n    edges {\n      node {\n        id\n        isValid\n        errors {\n          slug\n          errorMsg\n        }\n      }\n    }\n  }\n}"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "query GetAllWorkItems($filter: [WorkItemFilterSetType], $order: [WorkItemOrderSetType], $first: Int, $after: String) {\n  allWorkItems(filter: $filter, order: $order, first: $first, after: $after) {\n    edges {\n      node {\n        id\n        status\n        createdAt\n        closedAt\n        meta\n        addressedGroups\n        assignedUsers\n        case {\n          id\n          document {\n            id\n            form {\n              id\n              slug\n              name\n            }\n          }\n        }\n        task {\n          id\n          slug\n          name\n        }\n      }\n    }\n  }\n}\n\nquery GetWorkItemStatus($id: ID!) {\n  allWorkItems(filter: [{id: $id}]) {\n    edges {\n      node {\n        id\n        status\n        meta\n      }\n    }\n  }\n}\n\nmutation CompleteWorkItem($input: CompleteWorkItemInput!) {\n  completeWorkItem(input: $input) {\n    workItem {\n      id\n      status\n      closedAt\n    }\n    clientMutationId\n  }\n}\n\nmutation CancelWorkItem($input: CancelWorkItemInput!) {\n  cancelWorkItem(input: $input) {\n    workItem {\n      id\n      status\n      closedAt\n    }\n    clientMutationId\n  }\n}\n\nmutation SkipWorkItem($input: SkipWorkItemInput!) {\n  skipWorkItem(input: $input) {\n    workItem {\n      id\n      status\n      closedAt\n    }\n    clientMutationId\n  }\n}"): (typeof documents)["query GetAllWorkItems($filter: [WorkItemFilterSetType], $order: [WorkItemOrderSetType], $first: Int, $after: String) {\n  allWorkItems(filter: $filter, order: $order, first: $first, after: $after) {\n    edges {\n      node {\n        id\n        status\n        createdAt\n        closedAt\n        meta\n        addressedGroups\n        assignedUsers\n        case {\n          id\n          document {\n            id\n            form {\n              id\n              slug\n              name\n            }\n          }\n        }\n        task {\n          id\n          slug\n          name\n        }\n      }\n    }\n  }\n}\n\nquery GetWorkItemStatus($id: ID!) {\n  allWorkItems(filter: [{id: $id}]) {\n    edges {\n      node {\n        id\n        status\n        meta\n      }\n    }\n  }\n}\n\nmutation CompleteWorkItem($input: CompleteWorkItemInput!) {\n  completeWorkItem(input: $input) {\n    workItem {\n      id\n      status\n      closedAt\n    }\n    clientMutationId\n  }\n}\n\nmutation CancelWorkItem($input: CancelWorkItemInput!) {\n  cancelWorkItem(input: $input) {\n    workItem {\n      id\n      status\n      closedAt\n    }\n    clientMutationId\n  }\n}\n\nmutation SkipWorkItem($input: SkipWorkItemInput!) {\n  skipWorkItem(input: $input) {\n    workItem {\n      id\n      status\n      closedAt\n    }\n    clientMutationId\n  }\n}"];

export function graphql(source: string) {
  return (documents as any)[source] ?? {};
}

export type DocumentType<TDocumentNode extends DocumentNode<any, any>> = TDocumentNode extends DocumentNode<  infer TType,  any>  ? TType  : never;
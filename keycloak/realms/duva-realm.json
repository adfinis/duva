{
  "id": "27871833-3d65-483e-a896-86791ab0f8b1",
  "realm": "duva",
  "displayName": "",
  "displayNameHtml": "",
  "notBefore": 0,
  "defaultSignatureAlgorithm": "RS256",
  "revokeRefreshToken": false,
  "refreshTokenMaxReuse": 0,
  "accessTokenLifespan": 300,
  "accessTokenLifespanForImplicitFlow": 900,
  "ssoSessionIdleTimeout": 1800,
  "ssoSessionMaxLifespan": 36000,
  "ssoSessionIdleTimeoutRememberMe": 0,
  "ssoSessionMaxLifespanRememberMe": 0,
  "offlineSessionIdleTimeout": 2592000,
  "offlineSessionMaxLifespanEnabled": false,
  "offlineSessionMaxLifespan": 5184000,
  "clientSessionIdleTimeout": 0,
  "clientSessionMaxLifespan": 0,
  "clientOfflineSessionIdleTimeout": 0,
  "clientOfflineSessionMaxLifespan": 0,
  "accessCodeLifespan": 60,
  "accessCodeLifespanUserAction": 300,
  "accessCodeLifespanLogin": 1800,
  "actionTokenGeneratedByAdminLifespan": 43200,
  "actionTokenGeneratedByUserLifespan": 300,
  "oauth2DeviceCodeLifespan": 600,
  "oauth2DevicePollingInterval": 5,
  "enabled": true,
  "sslRequired": "external",
  "registrationAllowed": false,
  "registrationEmailAsUsername": false,
  "rememberMe": false,
  "verifyEmail": false,
  "loginWithEmailAllowed": true,
  "duplicateEmailsAllowed": false,
  "resetPasswordAllowed": false,
  "editUsernameAllowed": false,
  "bruteForceProtected": false,
  "permanentLockout": false,
  "maxTemporaryLockouts": 0,
  "bruteForceStrategy": "MULTIPLE",
  "maxFailureWaitSeconds": 900,
  "minimumQuickLoginWaitSeconds": 60,
  "waitIncrementSeconds": 60,
  "quickLoginCheckMilliSeconds": 1000,
  "maxDeltaTimeSeconds": 43200,
  "failureFactor": 30,
  "roles": {
    "realm": [
      {
        "id": "eb62cc7e-e0ee-40cf-ac1e-874d1de1e5f7",
        "name": "offline_access",
        "description": "${role_offline-access}",
        "composite": false,
        "clientRole": false,
        "containerId": "27871833-3d65-483e-a896-86791ab0f8b1",
        "attributes": {}
      },
      {
        "id": "555b2953-dfeb-427b-be3c-bb700329ea4d",
        "name": "uma_authorization",
        "description": "${role_uma_authorization}",
        "composite": false,
        "clientRole": false,
        "containerId": "27871833-3d65-483e-a896-86791ab0f8b1",
        "attributes": {}
      },
      {
        "id": "39388b49-a325-446d-a10e-851a72aee4b3",
        "name": "default-roles-duva",
        "description": "${role_default-roles}",
        "composite": true,
        "composites": {
          "realm": ["offline_access", "uma_authorization"],
          "client": {
            "account": ["view-profile", "manage-account"]
          }
        },
        "clientRole": false,
        "containerId": "27871833-3d65-483e-a896-86791ab0f8b1",
        "attributes": {}
      }
    ],
    "client": {
      "realm-management": [
        {
          "id": "6381f8e5-191d-4124-88f0-2e4f69a7cf82",
          "name": "impersonation",
          "description": "${role_impersonation}",
          "composite": false,
          "clientRole": true,
          "containerId": "c4a8ce80-b256-4394-8b3a-98529603f8c1",
          "attributes": {}
        },
        {
          "id": "2323087c-283e-4e74-8baf-260b92df8898",
          "name": "view-identity-providers",
          "description": "${role_view-identity-providers}",
          "composite": false,
          "clientRole": true,
          "containerId": "c4a8ce80-b256-4394-8b3a-98529603f8c1",
          "attributes": {}
        },
        {
          "id": "301cec0a-e359-4c2a-8d1a-7654092d3076",
          "name": "query-groups",
          "description": "${role_query-groups}",
          "composite": false,
          "clientRole": true,
          "containerId": "c4a8ce80-b256-4394-8b3a-98529603f8c1",
          "attributes": {}
        },
        {
          "id": "c0108f68-c41e-4c44-a815-779655f618e3",
          "name": "view-events",
          "description": "${role_view-events}",
          "composite": false,
          "clientRole": true,
          "containerId": "c4a8ce80-b256-4394-8b3a-98529603f8c1",
          "attributes": {}
        },
        {
          "id": "308c06e0-a579-4761-a560-526dd1644a23",
          "name": "view-realm",
          "description": "${role_view-realm}",
          "composite": false,
          "clientRole": true,
          "containerId": "c4a8ce80-b256-4394-8b3a-98529603f8c1",
          "attributes": {}
        },
        {
          "id": "2c7991aa-e200-4cb2-91d4-7267eaa96c66",
          "name": "manage-clients",
          "description": "${role_manage-clients}",
          "composite": false,
          "clientRole": true,
          "containerId": "c4a8ce80-b256-4394-8b3a-98529603f8c1",
          "attributes": {}
        },
        {
          "id": "96e04063-5202-4fb6-8611-36f4e8c3ca47",
          "name": "manage-events",
          "description": "${role_manage-events}",
          "composite": false,
          "clientRole": true,
          "containerId": "c4a8ce80-b256-4394-8b3a-98529603f8c1",
          "attributes": {}
        },
        {
          "id": "3c2182fe-e780-40db-95ed-0395a8b8fa38",
          "name": "manage-authorization",
          "description": "${role_manage-authorization}",
          "composite": false,
          "clientRole": true,
          "containerId": "c4a8ce80-b256-4394-8b3a-98529603f8c1",
          "attributes": {}
        },
        {
          "id": "6adb5df5-9f8d-43da-a881-67609617317b",
          "name": "query-users",
          "description": "${role_query-users}",
          "composite": false,
          "clientRole": true,
          "containerId": "c4a8ce80-b256-4394-8b3a-98529603f8c1",
          "attributes": {}
        },
        {
          "id": "02858519-f583-44fc-9f08-64abe56c3869",
          "name": "manage-users",
          "description": "${role_manage-users}",
          "composite": false,
          "clientRole": true,
          "containerId": "c4a8ce80-b256-4394-8b3a-98529603f8c1",
          "attributes": {}
        },
        {
          "id": "c40974c6-8dae-4056-a611-f7c53cd88c92",
          "name": "query-clients",
          "description": "${role_query-clients}",
          "composite": false,
          "clientRole": true,
          "containerId": "c4a8ce80-b256-4394-8b3a-98529603f8c1",
          "attributes": {}
        },
        {
          "id": "764114f3-8a46-420a-b7a7-e471450bf25f",
          "name": "view-clients",
          "description": "${role_view-clients}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": ["query-clients"]
            }
          },
          "clientRole": true,
          "containerId": "c4a8ce80-b256-4394-8b3a-98529603f8c1",
          "attributes": {}
        },
        {
          "id": "0ccb5433-d01d-45ff-af59-eb14521061bf",
          "name": "manage-identity-providers",
          "description": "${role_manage-identity-providers}",
          "composite": false,
          "clientRole": true,
          "containerId": "c4a8ce80-b256-4394-8b3a-98529603f8c1",
          "attributes": {}
        },
        {
          "id": "cac1ffe5-214e-4f39-98f9-c13f8367ca1f",
          "name": "query-realms",
          "description": "${role_query-realms}",
          "composite": false,
          "clientRole": true,
          "containerId": "c4a8ce80-b256-4394-8b3a-98529603f8c1",
          "attributes": {}
        },
        {
          "id": "b38fef84-3fb1-4b70-846d-257e86e652f9",
          "name": "view-users",
          "description": "${role_view-users}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": ["query-groups", "query-users"]
            }
          },
          "clientRole": true,
          "containerId": "c4a8ce80-b256-4394-8b3a-98529603f8c1",
          "attributes": {}
        },
        {
          "id": "8f7471c9-9c25-4708-ac28-82bcd0b1d179",
          "name": "manage-realm",
          "description": "${role_manage-realm}",
          "composite": false,
          "clientRole": true,
          "containerId": "c4a8ce80-b256-4394-8b3a-98529603f8c1",
          "attributes": {}
        },
        {
          "id": "3399a68b-3116-45dd-a024-d241ca47c02e",
          "name": "create-client",
          "description": "${role_create-client}",
          "composite": false,
          "clientRole": true,
          "containerId": "c4a8ce80-b256-4394-8b3a-98529603f8c1",
          "attributes": {}
        },
        {
          "id": "7f25ec42-3f41-4e78-9fbc-94a5cccf0e6d",
          "name": "realm-admin",
          "description": "${role_realm-admin}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": [
                "impersonation",
                "view-identity-providers",
                "view-events",
                "query-groups",
                "view-realm",
                "manage-clients",
                "manage-events",
                "manage-authorization",
                "query-users",
                "manage-users",
                "query-clients",
                "view-clients",
                "manage-identity-providers",
                "view-users",
                "query-realms",
                "manage-realm",
                "create-client",
                "view-authorization"
              ]
            }
          },
          "clientRole": true,
          "containerId": "c4a8ce80-b256-4394-8b3a-98529603f8c1",
          "attributes": {}
        },
        {
          "id": "9080ac7e-c36d-4b1c-af9f-fc01ccee2c9a",
          "name": "view-authorization",
          "description": "${role_view-authorization}",
          "composite": false,
          "clientRole": true,
          "containerId": "c4a8ce80-b256-4394-8b3a-98529603f8c1",
          "attributes": {}
        }
      ],
      "security-admin-console": [],
      "admin-cli": [],
      "account-console": [],
      "api": [
        {
          "id": "0b5f1ecc-86be-4f85-a0e9-de79ee1030b6",
          "name": "uma_protection",
          "composite": false,
          "clientRole": true,
          "containerId": "f7c814ec-f22b-403a-8cb6-674769f52d83",
          "attributes": {}
        }
      ],
      "broker": [
        {
          "id": "5d5e304d-4ce7-43ca-9aba-acd9f48a90e9",
          "name": "read-token",
          "description": "${role_read-token}",
          "composite": false,
          "clientRole": true,
          "containerId": "8075d842-deec-4c20-8de8-fea68a8d17c0",
          "attributes": {}
        }
      ],
      "account": [
        {
          "id": "3d373437-1a04-4110-9c02-5ede529ba51a",
          "name": "view-consent",
          "description": "${role_view-consent}",
          "composite": false,
          "clientRole": true,
          "containerId": "a779ab17-b96c-4b17-8c03-d8dffbff15e2",
          "attributes": {}
        },
        {
          "id": "fda70dbe-67a0-44ce-9a66-5e4390f643d3",
          "name": "manage-account-links",
          "description": "${role_manage-account-links}",
          "composite": false,
          "clientRole": true,
          "containerId": "a779ab17-b96c-4b17-8c03-d8dffbff15e2",
          "attributes": {}
        },
        {
          "id": "e9ef5582-b511-4e6d-9001-68bd9788d35c",
          "name": "view-profile",
          "description": "${role_view-profile}",
          "composite": false,
          "clientRole": true,
          "containerId": "a779ab17-b96c-4b17-8c03-d8dffbff15e2",
          "attributes": {}
        },
        {
          "id": "c41554ef-225e-49fa-951f-eb36f921ba33",
          "name": "manage-account",
          "description": "${role_manage-account}",
          "composite": true,
          "composites": {
            "client": {
              "account": ["manage-account-links"]
            }
          },
          "clientRole": true,
          "containerId": "a779ab17-b96c-4b17-8c03-d8dffbff15e2",
          "attributes": {}
        },
        {
          "id": "0ee83e23-0be8-42c9-82b2-96958dba64b6",
          "name": "view-applications",
          "description": "${role_view-applications}",
          "composite": false,
          "clientRole": true,
          "containerId": "a779ab17-b96c-4b17-8c03-d8dffbff15e2",
          "attributes": {}
        },
        {
          "id": "5005ea48-1ca4-4936-bef7-f607eca217f2",
          "name": "view-groups",
          "description": "${role_view-groups}",
          "composite": false,
          "clientRole": true,
          "containerId": "a779ab17-b96c-4b17-8c03-d8dffbff15e2",
          "attributes": {}
        },
        {
          "id": "faf6ea7c-f7fa-4ac8-8fe5-9a05760e97e3",
          "name": "delete-account",
          "description": "${role_delete-account}",
          "composite": false,
          "clientRole": true,
          "containerId": "a779ab17-b96c-4b17-8c03-d8dffbff15e2",
          "attributes": {}
        },
        {
          "id": "6d51fbc4-7e91-4d86-be21-7075ba09cc61",
          "name": "manage-consent",
          "description": "${role_manage-consent}",
          "composite": true,
          "composites": {
            "client": {
              "account": ["view-consent"]
            }
          },
          "clientRole": true,
          "containerId": "a779ab17-b96c-4b17-8c03-d8dffbff15e2",
          "attributes": {}
        }
      ]
    }
  },
  "groups": [],
  "defaultRole": {
    "id": "39388b49-a325-446d-a10e-851a72aee4b3",
    "name": "default-roles-duva",
    "description": "${role_default-roles}",
    "composite": true,
    "clientRole": false,
    "containerId": "27871833-3d65-483e-a896-86791ab0f8b1"
  },
  "requiredCredentials": ["password"],
  "otpPolicyType": "totp",
  "otpPolicyAlgorithm": "HmacSHA1",
  "otpPolicyInitialCounter": 0,
  "otpPolicyDigits": 6,
  "otpPolicyLookAheadWindow": 1,
  "otpPolicyPeriod": 30,
  "otpPolicyCodeReusable": false,
  "otpSupportedApplications": [
    "totpAppFreeOTPName",
    "totpAppGoogleName",
    "totpAppMicrosoftAuthenticatorName"
  ],
  "localizationTexts": {},
  "webAuthnPolicyRpEntityName": "keycloak",
  "webAuthnPolicySignatureAlgorithms": ["ES256", "RS256"],
  "webAuthnPolicyRpId": "",
  "webAuthnPolicyAttestationConveyancePreference": "not specified",
  "webAuthnPolicyAuthenticatorAttachment": "not specified",
  "webAuthnPolicyRequireResidentKey": "not specified",
  "webAuthnPolicyUserVerificationRequirement": "not specified",
  "webAuthnPolicyCreateTimeout": 0,
  "webAuthnPolicyAvoidSameAuthenticatorRegister": false,
  "webAuthnPolicyAcceptableAaguids": [],
  "webAuthnPolicyExtraOrigins": [],
  "webAuthnPolicyPasswordlessRpEntityName": "keycloak",
  "webAuthnPolicyPasswordlessSignatureAlgorithms": ["ES256", "RS256"],
  "webAuthnPolicyPasswordlessRpId": "",
  "webAuthnPolicyPasswordlessAttestationConveyancePreference": "not specified",
  "webAuthnPolicyPasswordlessAuthenticatorAttachment": "not specified",
  "webAuthnPolicyPasswordlessRequireResidentKey": "not specified",
  "webAuthnPolicyPasswordlessUserVerificationRequirement": "not specified",
  "webAuthnPolicyPasswordlessCreateTimeout": 0,
  "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister": false,
  "webAuthnPolicyPasswordlessAcceptableAaguids": [],
  "webAuthnPolicyPasswordlessExtraOrigins": [],
  "users": [
    {
      "id": "44750496-f30c-4b45-b52a-87d2f9dc401e",
      "username": "andrii.fedorchuk@adfinis.com",
      "firstName": "Andrii",
      "lastName": "Dev",
      "email": "andrii.fedorchuk@adfinis.com",
      "emailVerified": true,
      "createdTimestamp": 1735300821845,
      "enabled": true,
      "totp": false,
      "credentials": [
        {
          "id": "287e79b9-c631-4398-84c2-0dd7f156d8c6",
          "type": "password",
          "userLabel": "My password",
          "createdDate": 1735300846126,
          "secretData": "{\"value\":\"LzrCG0uVnKnGdz63QH8tNCkpGOa5TZnBFvbKd0ceEq4=\",\"salt\":\"6egSokHpZBcpGXLkUpG9bw==\",\"additionalParameters\":{}}",
          "credentialData": "{\"hashIterations\":5,\"algorithm\":\"argon2\",\"additionalParameters\":{\"hashLength\":[\"32\"],\"memory\":[\"7168\"],\"type\":[\"id\"],\"version\":[\"1.3\"],\"parallelism\":[\"1\"]}}"
        }
      ],
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": ["default-roles-duva"],
      "notBefore": 0,
      "groups": []
    },
    {
      "id": "a33a797e-d0f4-4dc1-b993-b94b88a689ad",
      "username": "daniel.mueller@adfinis.com",
      "firstName": "Daniel",
      "lastName": "Mueller",
      "email": "daniel.mueller@adfinis.com",
      "emailVerified": true,
      "createdTimestamp": 1735300861681,
      "enabled": true,
      "totp": false,
      "credentials": [
        {
          "id": "34e2c80b-bba2-415f-9918-9746c3f9b682",
          "type": "password",
          "userLabel": "My password",
          "createdDate": 1735300868493,
          "secretData": "{\"value\":\"HIvcycUZVoL1ijVsm9UjJm6ojV5O5/xE4+fxMzQ9G6M=\",\"salt\":\"TuTUwgMX0JryRSMhf5b0qA==\",\"additionalParameters\":{}}",
          "credentialData": "{\"hashIterations\":5,\"algorithm\":\"argon2\",\"additionalParameters\":{\"hashLength\":[\"32\"],\"memory\":[\"7168\"],\"type\":[\"id\"],\"version\":[\"1.3\"],\"parallelism\":[\"1\"]}}"
        }
      ],
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": ["default-roles-duva"],
      "notBefore": 0,
      "groups": []
    },
    {
      "id": "01940c11-fef2-49a2-aea3-1408223ede7e",
      "username": "oleksand.rebrin@adfinis.com",
      "firstName": "Oleksandr",
      "lastName": "Rebrin",
      "email": "oleksand.rebrin@adfinis.com",
      "emailVerified": true,
      "createdTimestamp": 1735300919911,
      "enabled": true,
      "totp": false,
      "credentials": [
        {
          "id": "a1169d86-463c-48fc-b7f1-0f332691d844",
          "type": "password",
          "userLabel": "My password",
          "createdDate": 1735300929412,
          "secretData": "{\"value\":\"rRxScBdzoxeeBzhz1Lqf7L0HbT/tnmfQT6sJR+nPZXY=\",\"salt\":\"4ASbssXQSRbZf4qzRZXVcg==\",\"additionalParameters\":{}}",
          "credentialData": "{\"hashIterations\":5,\"algorithm\":\"argon2\",\"additionalParameters\":{\"hashLength\":[\"32\"],\"memory\":[\"7168\"],\"type\":[\"id\"],\"version\":[\"1.3\"],\"parallelism\":[\"1\"]}}"
        }
      ],
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": ["default-roles-duva"],
      "notBefore": 0,
      "groups": []
    }
  ],
  "scopeMappings": [
    {
      "clientScope": "offline_access",
      "roles": ["offline_access"]
    }
  ],
  "clientScopeMappings": {
    "account": [
      {
        "client": "account-console",
        "roles": ["manage-account", "view-groups"]
      }
    ]
  },
  "clients": [
    {
      "id": "a779ab17-b96c-4b17-8c03-d8dffbff15e2",
      "clientId": "account",
      "name": "${client_account}",
      "rootUrl": "${authBaseUrl}",
      "baseUrl": "/realms/duva/account/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": ["/realms/duva/account/*"],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "realm_client": "false",
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [],
      "optionalClientScopes": []
    },
    {
      "id": "d75e5c99-8df3-400a-a525-0a2f8e6c575c",
      "clientId": "account-console",
      "name": "${client_account-console}",
      "rootUrl": "${authBaseUrl}",
      "baseUrl": "/realms/duva/account/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": ["/realms/duva/account/*"],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "realm_client": "false",
        "post.logout.redirect.uris": "+",
        "pkce.code.challenge.method": "S256"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "protocolMappers": [
        {
          "id": "22efea57-3617-4595-b5b6-9792c607020f",
          "name": "audience resolve",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-resolve-mapper",
          "consentRequired": false,
          "config": {}
        }
      ],
      "defaultClientScopes": [],
      "optionalClientScopes": []
    },
    {
      "id": "3450d136-84a3-42e7-afe2-60990631e955",
      "clientId": "admin-cli",
      "name": "${client_admin-cli}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": false,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "realm_client": "false",
        "client.use.lightweight.access.token.enabled": "true"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [],
      "optionalClientScopes": []
    },
    {
      "id": "f7c814ec-f22b-403a-8cb6-674769f52d83",
      "clientId": "api",
      "name": "",
      "description": "",
      "rootUrl": "",
      "adminUrl": "",
      "baseUrl": "",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "duva-realm-secret",
      "redirectUris": ["/*"],
      "webOrigins": ["/*"],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": true,
      "authorizationServicesEnabled": true,
      "publicClient": false,
      "frontchannelLogout": true,
      "protocol": "openid-connect",
      "attributes": {
        "client.secret.creation.time": "1735220811",
        "client.introspection.response.allow.jwt.claim.enabled": "false",
        "post.logout.redirect.uris": "+",
        "oauth2.device.authorization.grant.enabled": "false",
        "backchannel.logout.revoke.offline.tokens": "false",
        "use.refresh.tokens": "true",
        "realm_client": "false",
        "oidc.ciba.grant.enabled": "false",
        "client.use.lightweight.access.token.enabled": "false",
        "backchannel.logout.session.required": "true",
        "client_credentials.use_refresh_token": "false",
        "acr.loa.map": "{}",
        "require.pushed.authorization.requests": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "display.on.consent.screen": "false",
        "token.response.type.bearer.lower-case": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [
        {
          "id": "7e12dfc6-7774-4f4b-a8b8-3ecba7cc87ee",
          "name": "Client ID",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "client_id",
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "client_id",
            "jsonType.label": "String"
          }
        },
        {
          "id": "476da7fc-c2d4-41f0-8e40-a7c5d4023d5f",
          "name": "Client Host",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientHost",
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientHost",
            "jsonType.label": "String"
          }
        },
        {
          "id": "1b921322-bbd8-44fd-8a27-0c961bca2cdf",
          "name": "Client IP Address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientAddress",
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientAddress",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "profile",
        "organization",
        "roles",
        "basic",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ],
      "authorizationSettings": {
        "allowRemoteResourceManagement": true,
        "policyEnforcementMode": "ENFORCING",
        "resources": [
          {
            "name": "Default Resource",
            "type": "urn:api:resources:default",
            "ownerManagedAccess": false,
            "attributes": {},
            "uris": ["/*"]
          }
        ],
        "policies": [],
        "scopes": [],
        "decisionStrategy": "UNANIMOUS"
      }
    },
    {
      "clientId": "frontend",
      "name": "",
      "description": "",
      "rootUrl": "",
      "adminUrl": "http://localhost:5173/",
      "baseUrl": "",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": ["http://localhost:5173/"],
      "webOrigins": ["*"],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": true,
      "protocol": "openid-connect",
      "attributes": {
        "realm_client": "false",
        "oidc.ciba.grant.enabled": "false",
        "backchannel.logout.session.required": "true",
        "display.on.consent.screen": "false",
        "oauth2.device.authorization.grant.enabled": "false",
        "backchannel.logout.revoke.offline.tokens": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "profile",
        "organization",
        "roles",
        "basic",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ],
      "access": {
        "view": true,
        "configure": true,
        "manage": true
      }
    },
    {
      "id": "8075d842-deec-4c20-8de8-fea68a8d17c0",
      "clientId": "broker",
      "name": "${client_broker}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": true,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "realm_client": "true"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [],
      "optionalClientScopes": []
    },
    {
      "id": "c4a8ce80-b256-4394-8b3a-98529603f8c1",
      "clientId": "realm-management",
      "name": "${client_realm-management}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": true,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "realm_client": "true"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [],
      "optionalClientScopes": []
    },
    {
      "id": "67d23cd6-2233-4007-b1a7-bccb895daf61",
      "clientId": "security-admin-console",
      "name": "${client_security-admin-console}",
      "rootUrl": "${authAdminUrl}",
      "baseUrl": "/admin/duva/console/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": ["/admin/duva/console/*"],
      "webOrigins": ["+"],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "realm_client": "false",
        "client.use.lightweight.access.token.enabled": "true",
        "post.logout.redirect.uris": "+",
        "pkce.code.challenge.method": "S256"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": 0,
      "protocolMappers": [
        {
          "id": "6090a353-95fc-4884-a331-293ef95ef98b",
          "name": "locale",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "locale",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "locale",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [],
      "optionalClientScopes": []
    }
  ],
  "clientScopes": [
    {
      "id": "e054d4e4-3b7b-4bca-9f6f-2fee64d278b0",
      "name": "email",
      "description": "OpenID Connect built-in scope: email",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "consent.screen.text": "${emailScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "cabbb37d-9740-4cb1-b3d7-5c95738c1b97",
          "name": "email",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "email",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "email",
            "jsonType.label": "String"
          }
        },
        {
          "id": "d33b2bbd-6295-4c6d-9119-b8790d063c45",
          "name": "email verified",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "emailVerified",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "email_verified",
            "jsonType.label": "boolean"
          }
        }
      ]
    },
    {
      "id": "47de2bcc-2362-49d2-81aa-6a81038fffa4",
      "name": "roles",
      "description": "OpenID Connect scope for add user roles to the access token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "consent.screen.text": "${rolesScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "a80d194c-f477-4663-b4a3-9f776abd9771",
          "name": "realm roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-realm-role-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute": "foo",
            "introspection.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "realm_access.roles",
            "jsonType.label": "String",
            "multivalued": "true"
          }
        },
        {
          "id": "1b88dd37-30fe-438f-ba3e-6676ec35331c",
          "name": "client roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-client-role-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute": "foo",
            "introspection.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "resource_access.${client_id}.roles",
            "jsonType.label": "String",
            "multivalued": "true"
          }
        },
        {
          "id": "a52e5774-4c83-4cc5-9ab7-b34a56f96f5e",
          "name": "audience resolve",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-resolve-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "access.token.claim": "true"
          }
        }
      ]
    },
    {
      "id": "7ba11b19-225d-45b2-977a-01a55872c3ef",
      "name": "acr",
      "description": "OpenID Connect scope for add acr (authentication context class reference) to the token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "3a4d0db2-8fd0-4f26-a718-e1cedbedee05",
          "name": "acr loa level",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-acr-mapper",
          "consentRequired": false,
          "config": {
            "id.token.claim": "true",
            "introspection.token.claim": "true",
            "access.token.claim": "true",
            "userinfo.token.claim": "true"
          }
        }
      ]
    },
    {
      "id": "d594a273-c793-4674-8530-078c79df5e7d",
      "name": "saml_organization",
      "description": "Organization Membership",
      "protocol": "saml",
      "attributes": {
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "d605f094-f628-44a6-9b85-f1ca315e11d2",
          "name": "organization",
          "protocol": "saml",
          "protocolMapper": "saml-organization-membership-mapper",
          "consentRequired": false,
          "config": {}
        }
      ]
    },
    {
      "id": "1831c003-4ea5-4b65-b00e-6fff46d8c92d",
      "name": "basic",
      "description": "OpenID Connect scope for add all basic claims to the token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "36959d96-1fa9-453d-b64f-6ef2b67ae8f0",
          "name": "auth_time",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "AUTH_TIME",
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "auth_time",
            "jsonType.label": "long"
          }
        },
        {
          "id": "f8f60ff3-e866-4824-ba7d-fb0b2bcc535a",
          "name": "sub",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-sub-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "access.token.claim": "true"
          }
        }
      ]
    },
    {
      "id": "892ebdfa-2289-4571-b53f-b44ffb21a2e7",
      "name": "address",
      "description": "OpenID Connect built-in scope: address",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "consent.screen.text": "${addressScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "4d5e70d0-7727-4fdf-8734-0aa7435b3648",
          "name": "address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-address-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute.formatted": "formatted",
            "user.attribute.country": "country",
            "introspection.token.claim": "true",
            "user.attribute.postal_code": "postal_code",
            "userinfo.token.claim": "true",
            "user.attribute.street": "street",
            "id.token.claim": "true",
            "user.attribute.region": "region",
            "access.token.claim": "true",
            "user.attribute.locality": "locality"
          }
        }
      ]
    },
    {
      "id": "875bd077-e3f3-4f68-8de4-b4f15df846e3",
      "name": "phone",
      "description": "OpenID Connect built-in scope: phone",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "consent.screen.text": "${phoneScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "4d5f9d64-8fec-4b93-88f4-687edf1db72f",
          "name": "phone number",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "phoneNumber",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "phone_number",
            "jsonType.label": "String"
          }
        },
        {
          "id": "bc8c4d2e-5b4c-45e2-8a0a-4b3f4847068b",
          "name": "phone number verified",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "phoneNumberVerified",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "phone_number_verified",
            "jsonType.label": "boolean"
          }
        }
      ]
    },
    {
      "id": "0c1b640d-9fa2-437b-8603-7755f6f7dc3a",
      "name": "offline_access",
      "description": "OpenID Connect built-in scope: offline_access",
      "protocol": "openid-connect",
      "attributes": {
        "consent.screen.text": "${offlineAccessScopeConsentText}",
        "display.on.consent.screen": "true"
      }
    },
    {
      "id": "3ea2d46e-549a-413c-b6e2-56c33d861bb6",
      "name": "profile",
      "description": "OpenID Connect built-in scope: profile",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "consent.screen.text": "${profileScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "688cfefc-2e23-41f4-b8d3-070194c9efe9",
          "name": "gender",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "gender",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "gender",
            "jsonType.label": "String"
          }
        },
        {
          "id": "232a111a-a46c-4bc4-b705-36e0c74e2040",
          "name": "profile",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "profile",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "profile",
            "jsonType.label": "String"
          }
        },
        {
          "id": "4836b9a6-1c4f-4ae6-9f07-dc10765bb8eb",
          "name": "given name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "firstName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "given_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "dd218963-2ba8-44f4-9a22-2e485d5bf095",
          "name": "birthdate",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "birthdate",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "birthdate",
            "jsonType.label": "String"
          }
        },
        {
          "id": "4045413a-ee4f-499f-b173-6282a320be6a",
          "name": "full name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-full-name-mapper",
          "consentRequired": false,
          "config": {
            "id.token.claim": "true",
            "introspection.token.claim": "true",
            "access.token.claim": "true",
            "userinfo.token.claim": "true"
          }
        },
        {
          "id": "804454fc-6571-47f4-8f77-b25ff7f30331",
          "name": "picture",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "picture",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "picture",
            "jsonType.label": "String"
          }
        },
        {
          "id": "dba541dd-ebfd-41f9-adb4-4f269a8b607a",
          "name": "website",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "website",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "website",
            "jsonType.label": "String"
          }
        },
        {
          "id": "6c6033f9-84b9-49dc-90d9-6d6a8651dae9",
          "name": "updated at",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "updatedAt",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "updated_at",
            "jsonType.label": "long"
          }
        },
        {
          "id": "631b915a-3c02-4be7-bd21-d215011f4075",
          "name": "middle name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "middleName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "middle_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "62a026dd-6513-46eb-9601-cba910fdcec2",
          "name": "nickname",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "nickname",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "nickname",
            "jsonType.label": "String"
          }
        },
        {
          "id": "d0e94458-afe0-437a-ad52-eb9e9ec0946f",
          "name": "family name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "lastName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "family_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "87083109-8d67-45a1-9ad1-571bec69e26e",
          "name": "zoneinfo",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "zoneinfo",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "zoneinfo",
            "jsonType.label": "String"
          }
        },
        {
          "id": "6dea7160-c372-47f8-b71a-02e54ab22bb7",
          "name": "locale",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "locale",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "locale",
            "jsonType.label": "String"
          }
        },
        {
          "id": "0ab5af2a-dc01-4e13-8bef-92f3f068eb77",
          "name": "username",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "username",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "preferred_username",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "fc094b3a-7a08-4a88-a006-5fe12810d219",
      "name": "organization",
      "description": "Additional claims about the organization a subject belongs to",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "consent.screen.text": "${organizationScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "b99d8a7e-4f56-4331-88f8-05184062348e",
          "name": "organization",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-organization-membership-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "multivalued": "true",
            "userinfo.token.claim": "false",
            "addOrganizationAttributes": "true",
            "id.token.claim": "true",
            "lightweight.claim": "false",
            "access.token.claim": "true",
            "claim.name": "organization",
            "jsonType.label": "String",
            "addOrganizationId": "true"
          }
        }
      ]
    },
    {
      "id": "e2e7c55d-55c8-4599-8968-f59c4bc4686b",
      "name": "web-origins",
      "description": "OpenID Connect scope for add allowed web origins to the access token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "consent.screen.text": "",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "cdf1c57e-c43d-4de8-b1e1-4dc774420612",
          "name": "allowed web origins",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-allowed-origins-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "access.token.claim": "true"
          }
        }
      ]
    },
    {
      "id": "7ec93b42-e6c5-4dbe-ac08-5dc481bf413c",
      "name": "role_list",
      "description": "SAML role list",
      "protocol": "saml",
      "attributes": {
        "consent.screen.text": "${samlRoleListScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "a01a1771-dc00-437c-bb09-1db8a2bdf489",
          "name": "role list",
          "protocol": "saml",
          "protocolMapper": "saml-role-list-mapper",
          "consentRequired": false,
          "config": {
            "single": "false",
            "attribute.nameformat": "Basic",
            "attribute.name": "Role"
          }
        }
      ]
    },
    {
      "id": "cdbcaf5b-348a-4be9-85a6-754751ecb065",
      "name": "microprofile-jwt",
      "description": "Microprofile - JWT built-in scope",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "c9f0555f-e7fd-4dfb-8729-bb59eb209694",
          "name": "groups",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-realm-role-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "multivalued": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "foo",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "groups",
            "jsonType.label": "String"
          }
        },
        {
          "id": "8ba6c84c-44c7-4682-a688-cdaa5d5e2cba",
          "name": "upn",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "username",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "upn",
            "jsonType.label": "String"
          }
        }
      ]
    }
  ],
  "defaultDefaultClientScopes": [
    "role_list",
    "saml_organization",
    "profile",
    "email",
    "roles",
    "web-origins",
    "acr",
    "basic",
    "organization"
  ],
  "defaultOptionalClientScopes": [
    "offline_access",
    "address",
    "phone",
    "microprofile-jwt"
  ],
  "browserSecurityHeaders": {
    "contentSecurityPolicyReportOnly": "",
    "xContentTypeOptions": "nosniff",
    "referrerPolicy": "no-referrer",
    "xRobotsTag": "none",
    "xFrameOptions": "SAMEORIGIN",
    "contentSecurityPolicy": "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
    "xXSSProtection": "1; mode=block",
    "strictTransportSecurity": "max-age=31536000; includeSubDomains"
  },
  "smtpServer": {},
  "eventsEnabled": false,
  "eventsListeners": ["jboss-logging"],
  "enabledEventTypes": [],
  "adminEventsEnabled": false,
  "adminEventsDetailsEnabled": false,
  "identityProviders": [],
  "identityProviderMappers": [],
  "components": {
    "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy": [
      {
        "id": "e3404bfd-ea15-46cf-ba92-72561dea8611",
        "name": "Full Scope Disabled",
        "providerId": "scope",
        "subType": "anonymous",
        "subComponents": {},
        "config": {}
      },
      {
        "id": "a7e494b4-5177-49f6-b332-8f58c630876b",
        "name": "Allowed Client Scopes",
        "providerId": "allowed-client-templates",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "allow-default-scopes": ["true"]
        }
      },
      {
        "id": "85016e8e-0360-4259-9482-8a035a97c787",
        "name": "Consent Required",
        "providerId": "consent-required",
        "subType": "anonymous",
        "subComponents": {},
        "config": {}
      },
      {
        "id": "d69de4d9-2250-462f-a4ec-9ee9225bdc3e",
        "name": "Allowed Protocol Mapper Types",
        "providerId": "allowed-protocol-mappers",
        "subType": "authenticated",
        "subComponents": {},
        "config": {
          "allowed-protocol-mapper-types": [
            "saml-role-list-mapper",
            "oidc-usermodel-property-mapper",
            "saml-user-property-mapper",
            "oidc-usermodel-attribute-mapper",
            "oidc-sha256-pairwise-sub-mapper",
            "saml-user-attribute-mapper",
            "oidc-full-name-mapper",
            "oidc-address-mapper"
          ]
        }
      },
      {
        "id": "a5d54a87-9d3d-47e4-8b93-42b6fa58bc15",
        "name": "Max Clients Limit",
        "providerId": "max-clients",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "max-clients": ["200"]
        }
      },
      {
        "id": "ec0bc362-a1cf-47b0-ba64-f4ad3d9100db",
        "name": "Allowed Client Scopes",
        "providerId": "allowed-client-templates",
        "subType": "authenticated",
        "subComponents": {},
        "config": {
          "allow-default-scopes": ["true"]
        }
      },
      {
        "id": "3b6f19f7-7b8e-4ace-897e-e256d6f1a9dc",
        "name": "Allowed Protocol Mapper Types",
        "providerId": "allowed-protocol-mappers",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "allowed-protocol-mapper-types": [
            "saml-role-list-mapper",
            "oidc-sha256-pairwise-sub-mapper",
            "oidc-address-mapper",
            "saml-user-attribute-mapper",
            "oidc-full-name-mapper",
            "oidc-usermodel-attribute-mapper",
            "oidc-usermodel-property-mapper",
            "saml-user-property-mapper"
          ]
        }
      },
      {
        "id": "ce340d57-c587-47c3-bea6-955bf2cd982a",
        "name": "Trusted Hosts",
        "providerId": "trusted-hosts",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "host-sending-registration-request-must-match": ["true"],
          "client-uris-must-match": ["true"]
        }
      }
    ],
    "org.keycloak.keys.KeyProvider": [
      {
        "id": "511285cc-64d1-4817-bc64-4ea7dc2a69be",
        "name": "rsa-generated",
        "providerId": "rsa-generated",
        "subComponents": {},
        "config": {
          "privateKey": [
            "MIIEogIBAAKCAQEAuJMNTwWqv3wtJSiLO8ue7G3rGqgv8E+AuhPs+IWoZ6gW4nHbd+N49A7iJggFXdd4dBnvCLe8ZbTSc4DthbLad0cKTLiOCHBDzpcJDH31tIC99SelbXnX4SZyEmxwH7xYuZOBvj14RU2WpfWAI1HlXoKtDBUOTQ4OwN5fP4fi8JlruBViUsVLPjzL8MFrknTB9huSKOW3CN+Px94ijvG9aBAyhA0Zzm444Pj4BRwxwxpi3/FBqv+lo3hh3fsRAhMpWnntsN3FiizNkxOUAznSMUimVUli5dfAtUMWX6xQ9/t3AdzyKZIAwWbWUWvIWESHk6GmZ/4IWKp7TU0AhXnD1QIDAQABAoIBAAay25BLIdvKO282TftRFAb7pEU25mp/0CmwsHCClU6RxKbaP/9VY53j7mQ39U3nFImOKWU1GeLNEbg8bSJlj9U1YFPRfOIkhOl6BMuNxL2U0JAVrMTQ37tdpFUz10vnj4bIqjRH0dYeD0Idq1Vc0wi/kF04ZGj6giGQ0H8jROK7dup28XGr5UTveHsqeSX5MGQkyPnCDM9tHD0qVemiFDpbY+xMAPQd5jMisipj0N+1fr3SvHveus0xa2pi3VA0esYSrC5+ReNjLoTKyFQINek7C8Jj19aVaEeVSASQEdwhMybGlPw3NY2m5d4DZKiEznylEJhThS9nlbpmhV8ZPu8CgYEA4JgvubweS/+9BV6SQeFfc1Lq5POS0nHnVxb38Z1z/XRHwIENZcYCk/gnsfT9reWdLod/LN2831RJ4wwqsAgUPY3+4ho6DsqQ13uew4/jHYGzxsh52gpxvsjj7Ky9humz9Z3czH+q4ZAdvIt9rDBOO2NjfTpBXOK6V2YViN5Y3XsCgYEA0mJERqHPNBvsfefPOt1WRufygcZMwCjDoEGMCrzcUYensggsSg6tzZcVQ5QF1tiNWrxGkLov67gm14c/3Ofvo8m96RMsXS6tPwOscksiZ0B1EcRIinq4MsnsXRwGXmdImvShnoBIVl5HzppB/WIWJ95GvtnhURzYLZdvdcGlmu8CgYBghkeMpaLHuuN72Uc2dSvWnn5BY8VoGHf6X+6zsp3VAhKMU2p0oQMeoPo+azJTeGlzQ9yOZcX0nX8by3DVMsOwKMSwW+Ez1i8lzQVQuxg66DFhb2ufH/n+qsv6Pcs+nlYva2cnpH7Gbm+5RqH+TMxyjaaGfXD2AKNhSIhcyGKc3QKBgFCoiBCkXLJXulWTGCozTa6lop4KjsZlWosIVk6PldBUOADTjVdfRVc7A1YDXDHAmIEfCdbW6yRuV8Xt/pgM/B1JbVv8k9et25H7MJQpJil71uZW4JDm99PRAqO36OEsq/NsssH34MPsJY+aKI6immfymiD1m6LjciYYlw0IjxtVAoGATscwQkuUGXHXaogxZx4tkuBy3O2wqodySZSEtFXUBHG5DF2Yndh38/sG5hBkucvsEamDMamwsNwPBXMC2ypZTM2or3m8Raxyapp5FGy6ZwWs4As6+uwKPOQIGZ4Vvr7jjb4hQEsWoyaVyDFsRq+z9c5Of5CZLrxA83sjwnIUKPE="
          ],
          "certificate": [
            "MIICkzCCAXsCBgGUB/hhDjANBgkqhkiG9w0BAQsFADANMQswCQYDVQQDDAI0azAeFw0yNDEyMjcxMTUzMjVaFw0zNDEyMjcxMTU1MDVaMA0xCzAJBgNVBAMMAjRrMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAuJMNTwWqv3wtJSiLO8ue7G3rGqgv8E+AuhPs+IWoZ6gW4nHbd+N49A7iJggFXdd4dBnvCLe8ZbTSc4DthbLad0cKTLiOCHBDzpcJDH31tIC99SelbXnX4SZyEmxwH7xYuZOBvj14RU2WpfWAI1HlXoKtDBUOTQ4OwN5fP4fi8JlruBViUsVLPjzL8MFrknTB9huSKOW3CN+Px94ijvG9aBAyhA0Zzm444Pj4BRwxwxpi3/FBqv+lo3hh3fsRAhMpWnntsN3FiizNkxOUAznSMUimVUli5dfAtUMWX6xQ9/t3AdzyKZIAwWbWUWvIWESHk6GmZ/4IWKp7TU0AhXnD1QIDAQABMA0GCSqGSIb3DQEBCwUAA4IBAQBdOuiBJt7HDUzooTiL8CrGv5Qz9UAmpmSm9adiHED9MFu1dAUjjVOvda6lgmqA6lvLZhKBL9cJn/lam9AFm4ycUXi1b3pl/S3TBIBB4WMVfuNh0ZT15BQAtTAJqaMbr86Sn9ghxl4QNIUwjtX5CKTqxARaUX2dmiaLbhqUngECQ//LNHpAgBcIvpGUhSVsSyusAE/T0okS5hB7bEJ2yrP6wPvp73ge3N4Y0pL4FMqCTquXjZlD02QVENBQsFsYoF5BNBdTz5xk5RvYxjLVG6GNCIboUZz7q74yF+YGK2cJNmHGE3OPs+C0w/1CkJCXIn3EXTuNcvkdp0rzexT64mOI"
          ],
          "priority": ["100"]
        }
      },
      {
        "id": "1f96704a-814f-4062-9912-8caddc3c5d78",
        "name": "rsa-enc-generated",
        "providerId": "rsa-enc-generated",
        "subComponents": {},
        "config": {
          "privateKey": [
            "MIIEpAIBAAKCAQEAqyhdQxWo2HH3qltR9kRjlQsJFy2CwCAIaSJc6WZzXRSrk/XERxTkWnd1deTUnK3FyoeR4uJG1nBVEhK2tYGn3viTC0v/ev3SPVyV21bkpveTX0bWVk+W5pwRJRZQ2pHCm1fzKqeO/g4SCn2fS8JbCd+FUgUYgofYVPJwb1VsK9dnroli4/R1e0fRzD0XH0wsr5usXa4wgFoLHVsC9aMdu0g2IyjEYOlazkzunfmAb4CfSL9UkxKOM6N6btc7Ph38DgXbbEFTrVOArGkgUzyqaL5rzLJ0TrvAqyfwaqZQrGXsCVfkkgrOFooofDSwJ+hUZ0qKqV+SUABRqXR5K7Dk3QIDAQABAoIBAEuBfY8cLYX61P7m1WQWbHXyTdrXPXCjUQKMYb+nbio4da7Kw4F2In0UaRGO1wqdkH2VzBJyrzxnhuf3sHmnDpcLQtc/eh/YfJiMUSHXlfxgiLeF6QVfjBsE631YeGfL2LWuGXyOOcMzEttk6tLBlWboIAj8bYEcC6AB6f77iMJXxfHkqSoDzMePTpSyFP/v8CNSeja9KL2+olc/syFaoadOa4lgnSVv3i0PK3YmFqpPYXrJ0g1L1+Rv1GcxsxUX3yWse1BrFa2zH9FRfYmMGyDiPz5olQxGv7taB/1bKJd3m1KTQkU7dMAxW8m45E9n63OE3kGbmOPFiGit7wHLOlMCgYEA363A3v5C4p2abVf3/yT6i355Y8I1pkkuTbEf2MCfFt52y9EMKGQPvtjVWvYXSh4ZSVCLZy9V3tth7i40fot54mhLoN1emCHTPUAqAUscfMUCRCIGLnbmBjB16EaubrrNCUJjTzlt6eLD8ep4K6WfhdHdg0cvnl4d0rz2rG43WIcCgYEAw+PFLA7XYVkHtCeMNk8g/HekY3PbQXQgiJ6OUKzrB7n4Vk6D9KciBEsY0aqNiGRqAeFYsEmPMDQQt1NUz0bQfrxQfdYaq7S4kdXYCYKh4im6evTIesSyi2lmajOs0E3jFJm2ScSJBZZUWzoFZAgx7Yx+QemnvzZgNkCMsiyexHsCgYEA2Z4BhLKZPkMZaIJqjDhc7fRZg74CVkrimsHV+xrEbQp5R6iWDIH1c7cgNIQyenC4J0UOq5A5Gj4UlBcuCWQHbEgONG7LRnW6P+A6PdHm4FkH8GOt4ezZtHHXdOm3cZGaRATr+7si/aca/jUhP02+2wIoYj2SzaBBobMoxu/gNucCgYAFZetzEV2iEyABOO3GOVwBWRKwouqx3Q9gdG4bjwhTCC7twfAk984aLC+c54RK8+lv79PP19cYTvb+9k7p/1uTgoD9Vr8ZaDuF2UzAxlbLsrau2LwFlhINgXQPDSl//AV79dhuI/paqw/cC7dGUGt/zlVUX6n9vPPdyt2Vs2EUrQKBgQCEcHgdzFLcZsPAD/POGKHtoJrEfcUBX6kmaDeQsPPASqfX8RakVyqsq6hPTxo+HwUR8jaAf9VTdv3I6gLyWfr/QX+Zvw3fxaVOijeDRmgDN5TGZz9kBo8smRc6Ays6NhjIx2dRuZXKfBvpJXsMg0P0qEYWljglCte5Hhc9DicH9A=="
          ],
          "certificate": [
            "MIICkzCCAXsCBgGUB/hiHzANBgkqhkiG9w0BAQsFADANMQswCQYDVQQDDAI0azAeFw0yNDEyMjcxMTUzMjZaFw0zNDEyMjcxMTU1MDZaMA0xCzAJBgNVBAMMAjRrMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAqyhdQxWo2HH3qltR9kRjlQsJFy2CwCAIaSJc6WZzXRSrk/XERxTkWnd1deTUnK3FyoeR4uJG1nBVEhK2tYGn3viTC0v/ev3SPVyV21bkpveTX0bWVk+W5pwRJRZQ2pHCm1fzKqeO/g4SCn2fS8JbCd+FUgUYgofYVPJwb1VsK9dnroli4/R1e0fRzD0XH0wsr5usXa4wgFoLHVsC9aMdu0g2IyjEYOlazkzunfmAb4CfSL9UkxKOM6N6btc7Ph38DgXbbEFTrVOArGkgUzyqaL5rzLJ0TrvAqyfwaqZQrGXsCVfkkgrOFooofDSwJ+hUZ0qKqV+SUABRqXR5K7Dk3QIDAQABMA0GCSqGSIb3DQEBCwUAA4IBAQB5Refwi7KhA/n2vhnhrqI23kVdRY8ebW2m82tVLe4q61dfU6m1NkRF+/D2YqfdwTgK0LsyMVt6HdYQatOPcM82D/GtGGr+PRSSsH4bJ0mAFSMYr80yrU/0g1dxmxvkIpDp84LCCsBc6QY8fk52OCzk4TX3/s2o32yOV7S7bbyN8paA6xD25Iszyc26gaenT8T8fJeXiUM+LiEc91QtQKAX7yxVkRczVF6wIJt19wqd2INUwrBMs9L3w4GBQ/cYUJlUEI2YmM/VJ8Lm9r9BL79Og43PQsI3kkAOOQfHisCTJcCWGnAkOLIHhPuChK5Z25Q8OmIxy+kecn70hbVTevrt"
          ],
          "priority": ["100"],
          "algorithm": ["RSA-OAEP"]
        }
      },
      {
        "id": "7515eac5-e6a1-4753-9218-82b388603b1c",
        "name": "hmac-generated-hs512",
        "providerId": "hmac-generated",
        "subComponents": {},
        "config": {
          "kid": ["42010e8b-cff9-4335-8b69-5a7b375dd83e"],
          "secret": [
            "v3rINgsdQvohbIPTKNgr6AvRguHpQ5ta8usW8cD9zssFl7N5l1YCjWt1m_x2DeFItlZolQuzotkxy1sHkhmj-ceHzhY020q7Wb58MgEwEgEc_FjAVWR15zQZwKr_L1ypY7xynYI3rTB0i4EokofFhvdlivUJMdZWX5zFIDymr0M"
          ],
          "priority": ["100"],
          "algorithm": ["HS512"]
        }
      },
      {
        "id": "9fb57b49-a769-4850-bb2c-8b9d84424fbf",
        "name": "aes-generated",
        "providerId": "aes-generated",
        "subComponents": {},
        "config": {
          "kid": ["14e70fc5-ae4a-4d5a-999c-2b5053b5ba74"],
          "secret": ["euUfOsRds39s997ByDJFuw"],
          "priority": ["100"]
        }
      }
    ]
  },
  "internationalizationEnabled": false,
  "supportedLocales": [],
  "authenticationFlows": [
    {
      "id": "11ba0927-4cf2-4c5c-9d19-e59eadebcb59",
      "alias": "Account verification options",
      "description": "Method with which to verity the existing account",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-email-verification",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Verify Existing Account by Re-authentication",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "36e771e6-fecd-4576-a7d6-1eba4f8ed64b",
      "alias": "Browser - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-otp-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "5658e6a4-d280-4646-a225-89014748ebf7",
      "alias": "Browser - Conditional Organization",
      "description": "Flow to determine if the organization identity-first login is to be used",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "organization",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "0280abde-1f26-4777-9d43-706e917d5696",
      "alias": "Direct Grant - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "direct-grant-validate-otp",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "039b02fa-67d4-4f61-a571-8f7d6e7472d5",
      "alias": "First Broker Login - Conditional Organization",
      "description": "Flow to determine if the authenticator that adds organization members is to be used",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "idp-add-organization-member",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "f1aa097f-3185-4b29-9e91-d9753d4d397f",
      "alias": "First broker login - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-otp-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "abd032fc-54d2-4b0e-b511-584218739066",
      "alias": "Handle Existing Account",
      "description": "Handle what to do if there is existing account with same email/username like authenticated identity provider",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-confirm-link",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Account verification options",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "594f6208-85a6-4dd1-b728-d0f963510dd5",
      "alias": "Organization",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 10,
          "autheticatorFlow": true,
          "flowAlias": "Browser - Conditional Organization",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "2b30a519-ccf3-4248-8396-c3a42bab9e2c",
      "alias": "Reset - Conditional OTP",
      "description": "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-otp",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "85bff488-a650-4951-9b62-bf14409fda04",
      "alias": "User creation or linking",
      "description": "Flow for the existing/non-existing user alternatives",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticatorConfig": "create unique user config",
          "authenticator": "idp-create-user-if-unique",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Handle Existing Account",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "2ea1ea2c-e955-4c01-b190-8db2cd28e477",
      "alias": "Verify Existing Account by Re-authentication",
      "description": "Reauthentication of existing account",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-username-password-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "First broker login - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "bc01e805-2509-4e2b-8418-b9c78c66f0c4",
      "alias": "browser",
      "description": "Browser based authentication",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "auth-cookie",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-spnego",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "identity-provider-redirector",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 25,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 26,
          "autheticatorFlow": true,
          "flowAlias": "Organization",
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 30,
          "autheticatorFlow": true,
          "flowAlias": "forms",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "d36cae50-6370-47a8-b6f1-80662d1e4d6f",
      "alias": "clients",
      "description": "Base authentication for clients",
      "providerId": "client-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "client-secret",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-jwt",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-secret-jwt",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 30,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-x509",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 40,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "18f210c0-effb-417d-af89-cb8812b99114",
      "alias": "direct grant",
      "description": "OpenID Connect Resource Owner Grant",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "direct-grant-validate-username",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "direct-grant-validate-password",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 30,
          "autheticatorFlow": true,
          "flowAlias": "Direct Grant - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "01530a21-e1e2-4ff5-84b6-d6ababe2260a",
      "alias": "docker auth",
      "description": "Used by Docker clients to authenticate against the IDP",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "docker-http-basic-authenticator",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "49b9af37-773f-4c17-96e2-76e528db09ff",
      "alias": "first broker login",
      "description": "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticatorConfig": "review profile config",
          "authenticator": "idp-review-profile",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "User creation or linking",
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 50,
          "autheticatorFlow": true,
          "flowAlias": "First Broker Login - Conditional Organization",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "90518c1d-686d-424c-99cb-24844751bc49",
      "alias": "forms",
      "description": "Username, password, otp and other auth forms.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "auth-username-password-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Browser - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "cd063b69-2d9b-4e1c-ab39-5637f437a17c",
      "alias": "registration",
      "description": "Registration flow",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "registration-page-form",
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": true,
          "flowAlias": "registration form",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "5fbce9e4-b0aa-4e46-abc8-27e5e04fe870",
      "alias": "registration form",
      "description": "Registration form",
      "providerId": "form-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "registration-user-creation",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-password-action",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 50,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-recaptcha-action",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 60,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-terms-and-conditions",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 70,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "e63c177d-9ac0-447f-bc83-7eb0883170eb",
      "alias": "reset credentials",
      "description": "Reset credentials for a user if they forgot their password or something",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "reset-credentials-choose-user",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-credential-email",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-password",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 30,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 40,
          "autheticatorFlow": true,
          "flowAlias": "Reset - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "3cbbd68c-10bf-4ece-ab57-ecc7b005b0ef",
      "alias": "saml ecp",
      "description": "SAML ECP Profile Authentication Flow",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "http-basic-authenticator",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    }
  ],
  "authenticatorConfig": [
    {
      "id": "f3db7a05-0743-4c65-9cbc-ff1954a571aa",
      "alias": "create unique user config",
      "config": {
        "require.password.update.after.registration": "false"
      }
    },
    {
      "id": "a7b5434f-7809-4d61-a447-cdcf5931737c",
      "alias": "review profile config",
      "config": {
        "update.profile.on.first.login": "missing"
      }
    }
  ],
  "requiredActions": [
    {
      "alias": "CONFIGURE_TOTP",
      "name": "Configure OTP",
      "providerId": "CONFIGURE_TOTP",
      "enabled": true,
      "defaultAction": false,
      "priority": 10,
      "config": {}
    },
    {
      "alias": "TERMS_AND_CONDITIONS",
      "name": "Terms and Conditions",
      "providerId": "TERMS_AND_CONDITIONS",
      "enabled": false,
      "defaultAction": false,
      "priority": 20,
      "config": {}
    },
    {
      "alias": "UPDATE_PASSWORD",
      "name": "Update Password",
      "providerId": "UPDATE_PASSWORD",
      "enabled": true,
      "defaultAction": false,
      "priority": 30,
      "config": {}
    },
    {
      "alias": "UPDATE_PROFILE",
      "name": "Update Profile",
      "providerId": "UPDATE_PROFILE",
      "enabled": true,
      "defaultAction": false,
      "priority": 40,
      "config": {}
    },
    {
      "alias": "VERIFY_EMAIL",
      "name": "Verify Email",
      "providerId": "VERIFY_EMAIL",
      "enabled": true,
      "defaultAction": false,
      "priority": 50,
      "config": {}
    },
    {
      "alias": "delete_account",
      "name": "Delete Account",
      "providerId": "delete_account",
      "enabled": false,
      "defaultAction": false,
      "priority": 60,
      "config": {}
    },
    {
      "alias": "webauthn-register",
      "name": "Webauthn Register",
      "providerId": "webauthn-register",
      "enabled": true,
      "defaultAction": false,
      "priority": 70,
      "config": {}
    },
    {
      "alias": "webauthn-register-passwordless",
      "name": "Webauthn Register Passwordless",
      "providerId": "webauthn-register-passwordless",
      "enabled": true,
      "defaultAction": false,
      "priority": 80,
      "config": {}
    },
    {
      "alias": "VERIFY_PROFILE",
      "name": "Verify Profile",
      "providerId": "VERIFY_PROFILE",
      "enabled": true,
      "defaultAction": false,
      "priority": 90,
      "config": {}
    },
    {
      "alias": "delete_credential",
      "name": "Delete Credential",
      "providerId": "delete_credential",
      "enabled": true,
      "defaultAction": false,
      "priority": 100,
      "config": {}
    },
    {
      "alias": "update_user_locale",
      "name": "Update User Locale",
      "providerId": "update_user_locale",
      "enabled": true,
      "defaultAction": false,
      "priority": 1000,
      "config": {}
    }
  ],
  "browserFlow": "browser",
  "registrationFlow": "registration",
  "directGrantFlow": "direct grant",
  "resetCredentialsFlow": "reset credentials",
  "clientAuthenticationFlow": "clients",
  "dockerAuthenticationFlow": "docker auth",
  "firstBrokerLoginFlow": "first broker login",
  "attributes": {
    "cibaBackchannelTokenDeliveryMode": "poll",
    "cibaAuthRequestedUserHint": "login_hint",
    "clientOfflineSessionMaxLifespan": "0",
    "oauth2DevicePollingInterval": "5",
    "clientSessionIdleTimeout": "0",
    "clientOfflineSessionIdleTimeout": "0",
    "cibaInterval": "5",
    "realmReusableOtpCode": "false",
    "cibaExpiresIn": "120",
    "oauth2DeviceCodeLifespan": "600",
    "parRequestUriLifespan": "60",
    "clientSessionMaxLifespan": "0",
    "frontendUrl": "",
    "organizationsEnabled": "true",
    "acr.loa.map": "{}"
  },
  "keycloakVersion": "26.0.6",
  "userManagedAccessAllowed": false,
  "organizationsEnabled": true,
  "organizations": [
    {
      "id": "60d77dd6-ffaf-4c26-805d-4f480197902b",
      "name": "duva",
      "alias": "duva",
      "enabled": true,
      "description": "",
      "attributes": {},
      "domains": [
        {
          "name": "duva.de",
          "verified": false
        }
      ],
      "members": [
        {
          "username": "andrii.fedorchuk@adfinis.com",
          "membershipType": "UNMANAGED"
        },
        {
          "username": "daniel.mueller@adfinis.com",
          "membershipType": "UNMANAGED"
        },
        {
          "username": "oleksand.rebrin@adfinis.com",
          "membershipType": "UNMANAGED"
        }
      ]
    }
  ],
  "clientProfiles": {
    "profiles": []
  },
  "clientPolicies": {
    "policies": []
  }
}
